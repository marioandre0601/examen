{
  "Resources": {
    "customertableAAE4519D": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "pk",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "pk",
            "AttributeType": "S"
          },
          {
            "AttributeName": "document",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "document",
            "KeySchema": [
              {
                "AttributeName": "document",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "my-lambda/customer-table/Resource"
      }
    },
    "dependencieslayerCD66A07B": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bbS3BucketA9CD06AD"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bbS3VersionKeyE81EFF78"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bbS3VersionKeyE81EFF78"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "nodejs14.x"
        ],
        "Description": "Dependencies"
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/dependencies-layer/Resource",
        "aws:asset:path": "asset.2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bb",
        "aws:asset:property": "Content"
      }
    },
    "createfunctionServiceRole2BBD26A6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/create-function/ServiceRole/Resource"
      }
    },
    "createfunctionServiceRoleDefaultPolicy35595812": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "customertableAAE4519D",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "customertableAAE4519D",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createfunctionServiceRoleDefaultPolicy35595812",
        "Roles": [
          {
            "Ref": "createfunctionServiceRole2BBD26A6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/create-function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createfunction729BE90C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3Bucket2C99856C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "createfunctionServiceRole2BBD26A6",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "customertableAAE4519D"
            }
          }
        },
        "Handler": "handlers/create.handler",
        "Layers": [
          {
            "Ref": "dependencieslayerCD66A07B"
          }
        ],
        "Runtime": "nodejs14.x",
        "Timeout": 29
      },
      "DependsOn": [
        "createfunctionServiceRoleDefaultPolicy35595812",
        "createfunctionServiceRole2BBD26A6"
      ],
      "Metadata": {
        "aws:cdk:path": "my-lambda/create-function/Resource",
        "aws:asset:path": "asset.403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48be",
        "aws:asset:property": "Code"
      }
    },
    "getbyemailfunctionServiceRoleE9FBFFF0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/get-by-email-function/ServiceRole/Resource"
      }
    },
    "getbyemailfunctionServiceRoleDefaultPolicy0669C8A3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "customertableAAE4519D",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "customertableAAE4519D",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getbyemailfunctionServiceRoleDefaultPolicy0669C8A3",
        "Roles": [
          {
            "Ref": "getbyemailfunctionServiceRoleE9FBFFF0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/get-by-email-function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getbyemailfunction0664C563": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3Bucket2C99856C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getbyemailfunctionServiceRoleE9FBFFF0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "customertableAAE4519D"
            }
          }
        },
        "Handler": "handlers/getByEmail.handler",
        "Layers": [
          {
            "Ref": "dependencieslayerCD66A07B"
          }
        ],
        "Runtime": "nodejs14.x",
        "Timeout": 29
      },
      "DependsOn": [
        "getbyemailfunctionServiceRoleDefaultPolicy0669C8A3",
        "getbyemailfunctionServiceRoleE9FBFFF0"
      ],
      "Metadata": {
        "aws:cdk:path": "my-lambda/get-by-email-function/Resource",
        "aws:asset:path": "asset.403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48be",
        "aws:asset:property": "Code"
      }
    },
    "getbydocumentfunctionServiceRole16D957C0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/get-by-document-function/ServiceRole/Resource"
      }
    },
    "getbydocumentfunctionServiceRoleDefaultPolicyADC776ED": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "customertableAAE4519D",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "customertableAAE4519D",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getbydocumentfunctionServiceRoleDefaultPolicyADC776ED",
        "Roles": [
          {
            "Ref": "getbydocumentfunctionServiceRole16D957C0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/get-by-document-function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getbydocumentfunction798312D4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3Bucket2C99856C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getbydocumentfunctionServiceRole16D957C0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "customertableAAE4519D"
            }
          }
        },
        "Handler": "handlers/getByDocument.handler",
        "Layers": [
          {
            "Ref": "dependencieslayerCD66A07B"
          }
        ],
        "Runtime": "nodejs14.x",
        "Timeout": 29
      },
      "DependsOn": [
        "getbydocumentfunctionServiceRoleDefaultPolicyADC776ED",
        "getbydocumentfunctionServiceRole16D957C0"
      ],
      "Metadata": {
        "aws:cdk:path": "my-lambda/get-by-document-function/Resource",
        "aws:asset:path": "asset.403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48be",
        "aws:asset:property": "Code"
      }
    },
    "updatefunctionServiceRole574BA449": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/update-function/ServiceRole/Resource"
      }
    },
    "updatefunctionServiceRoleDefaultPolicy73F9A50B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "customertableAAE4519D",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "customertableAAE4519D",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updatefunctionServiceRoleDefaultPolicy73F9A50B",
        "Roles": [
          {
            "Ref": "updatefunctionServiceRole574BA449"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/update-function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "updatefunction240A5A05": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3Bucket2C99856C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "updatefunctionServiceRole574BA449",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "customertableAAE4519D"
            }
          }
        },
        "Handler": "handlers/update.handler",
        "Layers": [
          {
            "Ref": "dependencieslayerCD66A07B"
          }
        ],
        "Runtime": "nodejs14.x",
        "Timeout": 29
      },
      "DependsOn": [
        "updatefunctionServiceRoleDefaultPolicy73F9A50B",
        "updatefunctionServiceRole574BA449"
      ],
      "Metadata": {
        "aws:cdk:path": "my-lambda/update-function/Resource",
        "aws:asset:path": "asset.403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48be",
        "aws:asset:property": "Code"
      }
    },
    "deletefunctionServiceRole8C0BC7EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/delete-function/ServiceRole/Resource"
      }
    },
    "deletefunctionServiceRoleDefaultPolicy0F7A22E3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "customertableAAE4519D",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "customertableAAE4519D",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deletefunctionServiceRoleDefaultPolicy0F7A22E3",
        "Roles": [
          {
            "Ref": "deletefunctionServiceRole8C0BC7EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/delete-function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deletefunction554609D0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3Bucket2C99856C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "deletefunctionServiceRole8C0BC7EC",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "customertableAAE4519D"
            }
          }
        },
        "Handler": "handlers/delete.handler",
        "Layers": [
          {
            "Ref": "dependencieslayerCD66A07B"
          }
        ],
        "Runtime": "nodejs14.x",
        "Timeout": 29
      },
      "DependsOn": [
        "deletefunctionServiceRoleDefaultPolicy0F7A22E3",
        "deletefunctionServiceRole8C0BC7EC"
      ],
      "Metadata": {
        "aws:cdk:path": "my-lambda/delete-function/Resource",
        "aws:asset:path": "asset.403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48be",
        "aws:asset:property": "Code"
      }
    },
    "apiC8550315": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "api"
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Resource"
      }
    },
    "apiCloudWatchRoleAC81D93E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/CloudWatchRole/Resource"
      }
    },
    "apiAccount57E28B43": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "apiCloudWatchRoleAC81D93E",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "apiC8550315"
      ],
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Account"
      }
    },
    "apiDeployment149F129489e6d7577b7453cb207bbfb87b78a446": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "apibadrequestgwResponse4D19EDC0",
        "apicustomermodelFB16A7B8",
        "apicustomerupdatemodel92CB5B8D",
        "apiemailDELETE89574E19",
        "apiemailGET0701AABF",
        "apiemailPUT68E4530E",
        "apiemail2164393C",
        "apiGETECF0BD67",
        "apiPOST36368FF5",
        "apifullvalidator14E87319",
        "apiparamsvalidator3CA5B9D6"
      ],
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Deployment/Resource"
      }
    },
    "apiDeploymentStageprod896C8101": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "DeploymentId": {
          "Ref": "apiDeployment149F129489e6d7577b7453cb207bbfb87b78a446"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/DeploymentStage.prod/Resource"
      }
    },
    "apiPOSTApiPermissionmylambdaapi2986B6A0POSTADCA5012": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createfunction729BE90C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStageprod896C8101"
              },
              "/POST/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/POST/ApiPermission.mylambdaapi2986B6A0.POST.."
      }
    },
    "apiPOSTApiPermissionTestmylambdaapi2986B6A0POSTC4A0EFC7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createfunction729BE90C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/POST/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/POST/ApiPermission.Test.mylambdaapi2986B6A0.POST.."
      }
    },
    "apiPOST36368FF5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createfunction729BE90C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "apicustomermodelFB16A7B8"
              }
            },
            "StatusCode": "201"
          }
        ],
        "RequestModels": {
          "application/json": {
            "Ref": "apicustomermodelFB16A7B8"
          }
        },
        "RequestValidatorId": {
          "Ref": "apifullvalidator14E87319"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/POST/Resource"
      }
    },
    "apiGETApiPermissionmylambdaapi2986B6A0GET92067EA5": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getbydocumentfunction798312D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStageprod896C8101"
              },
              "/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/GET/ApiPermission.mylambdaapi2986B6A0.GET.."
      }
    },
    "apiGETApiPermissionTestmylambdaapi2986B6A0GETA6CC0EBF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getbydocumentfunction798312D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/GET/ApiPermission.Test.mylambdaapi2986B6A0.GET.."
      }
    },
    "apiGETECF0BD67": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getbydocumentfunction798312D4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "apicustomermodelFB16A7B8"
              }
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.querystring.document_number": true,
          "method.request.querystring.document_type": true
        },
        "RequestValidatorId": {
          "Ref": "apiparamsvalidator3CA5B9D6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/GET/Resource"
      }
    },
    "apiemail2164393C": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "{email}",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/Resource"
      }
    },
    "apiemailGETApiPermissionmylambdaapi2986B6A0GETemail3EA157B0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getbyemailfunction0664C563",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStageprod896C8101"
              },
              "/GET/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/GET/ApiPermission.mylambdaapi2986B6A0.GET..{email}"
      }
    },
    "apiemailGETApiPermissionTestmylambdaapi2986B6A0GETemailFA07EEC0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getbyemailfunction0664C563",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/GET/ApiPermission.Test.mylambdaapi2986B6A0.GET..{email}"
      }
    },
    "apiemailGET0701AABF": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apiemail2164393C"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getbyemailfunction0664C563",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "apicustomermodelFB16A7B8"
              }
            },
            "StatusCode": "200"
          }
        ],
        "RequestValidatorId": {
          "Ref": "apifullvalidator14E87319"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/GET/Resource"
      }
    },
    "apiemailPUTApiPermissionmylambdaapi2986B6A0PUTemail13CDBEC1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updatefunction240A5A05",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStageprod896C8101"
              },
              "/PUT/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/PUT/ApiPermission.mylambdaapi2986B6A0.PUT..{email}"
      }
    },
    "apiemailPUTApiPermissionTestmylambdaapi2986B6A0PUTemail74C9D8C6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updatefunction240A5A05",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/PUT/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/PUT/ApiPermission.Test.mylambdaapi2986B6A0.PUT..{email}"
      }
    },
    "apiemailPUT68E4530E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "apiemail2164393C"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "updatefunction240A5A05",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "apicustomermodelFB16A7B8"
              }
            },
            "StatusCode": "200"
          }
        ],
        "RequestModels": {
          "application/json": {
            "Ref": "apicustomerupdatemodel92CB5B8D"
          }
        },
        "RequestValidatorId": {
          "Ref": "apifullvalidator14E87319"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/PUT/Resource"
      }
    },
    "apiemailDELETEApiPermissionmylambdaapi2986B6A0DELETEemailC29CD98E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deletefunction554609D0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStageprod896C8101"
              },
              "/DELETE/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/DELETE/ApiPermission.mylambdaapi2986B6A0.DELETE..{email}"
      }
    },
    "apiemailDELETEApiPermissionTestmylambdaapi2986B6A0DELETEemail99229222": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deletefunction554609D0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/DELETE/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/DELETE/ApiPermission.Test.mylambdaapi2986B6A0.DELETE..{email}"
      }
    },
    "apiemailDELETE89574E19": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "apiemail2164393C"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deletefunction554609D0",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "StatusCode": "204"
          }
        ],
        "RequestValidatorId": {
          "Ref": "apifullvalidator14E87319"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/Default/{email}/DELETE/Resource"
      }
    },
    "apibadrequestgwResponse4D19EDC0": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseType": "BAD_REQUEST_BODY",
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "ResponseTemplates": {
          "application/json": "{\"message\": $context.error.messageString, \"detail\": \"$context.error.validationErrorString\"}"
        },
        "StatusCode": "400"
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/bad-request-gwResponse/Resource"
      }
    },
    "apicustomermodelFB16A7B8": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "ContentType": "application/json",
        "Name": "Customer",
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "email": {
              "description": "Primary key",
              "type": "string"
            },
            "document_number": {
              "type": "string"
            },
            "document_type": {
              "type": "string",
              "enum": [
                "DNI",
                "RUC",
                "CE"
              ]
            },
            "name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "email",
            "document_number",
            "document_type",
            "name",
            "last_name"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/customer-model/Resource"
      }
    },
    "apicustomerupdatemodel92CB5B8D": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "ContentType": "application/json",
        "Name": "CustomerUpdate",
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "description": "What is possible to update",
          "properties": {
            "name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "name",
            "last_name"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/customer-update-model/Resource"
      }
    },
    "apifullvalidator14E87319": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Name": "full-validator",
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/full-validator/Resource"
      }
    },
    "apiparamsvalidator3CA5B9D6": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Name": "params-validator",
        "ValidateRequestBody": false,
        "ValidateRequestParameters": true
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/api/params-validator/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/11STU/DMAz9LdyzjAISHBlDcGFiKmh3LzEjW5uU2GGqqv53UnebNk557/nr2Uqhi5sHfX31CHuaGLubdiZE1N0Hg9mpEimkaFDNiJCztnF+o+bBE8dkWM2//BIi1MgYB/KeuEkinyozzvnWsQu+V8OUzrYe6mDXuvuEdSUpAnpVQb22oLs3aDGuMFIuGsIX/CV5w4fAOV5irB2RzKHbCQyWSYvzzPVTMjvkJyBUDmrdlWEcLe8yVM600kVQdtq4DTDuoc2pSDxr3GGvI5wZE5Jn9YxNFdoavSx+xoZ7yYgRHE8iFhbI38EOwQM6P9gJv44OMm/yzSX2X1oEi5X0EVDiT8oWV1A5Cxzi2O5S6/te+ZyttzT9Le50cZ8/wJacm8S8j6tRl+P7B5Ote2EdAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "my-lambda/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameters2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bbS3BucketA9CD06AD": {
      "Type": "String",
      "Description": "S3 bucket for asset \"2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bb\""
    },
    "AssetParameters2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bbS3VersionKeyE81EFF78": {
      "Type": "String",
      "Description": "S3 key for asset version \"2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bb\""
    },
    "AssetParameters2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bbArtifactHash71FA47AA": {
      "Type": "String",
      "Description": "Artifact hash for asset \"2e0938d8207f9095a5914a1cf190836553d3f5604789b4f7e0e8f6f4760756bb\""
    },
    "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3Bucket2C99856C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48be\""
    },
    "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beS3VersionKey555C4A6A": {
      "Type": "String",
      "Description": "S3 key for asset version \"403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48be\""
    },
    "AssetParameters403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48beArtifactHashCD3085AD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"403b32b3ae34857678bba7fde5e4bc94c2c606b6ef2c7f5fe4750205011b48be\""
    }
  },
  "Outputs": {
    "apiEndpoint9349E63C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStageprod896C8101"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}