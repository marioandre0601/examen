<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="1008" failures="0" errors="0" time="6.274">
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-14T04:58:11" time="1.283" tests="3">
    <testcase classname=" spot-check Bucket statefulness" name=" spot-check Bucket statefulness" time="0.003">
    </testcase>
    <testcase classname=" spot-check Table statefulness" name=" spot-check Table statefulness" time="0.001">
    </testcase>
    <testcase classname=" spot-check MediaStore metrics" name=" spot-check MediaStore metrics" time="0">
    </testcase>
  </testsuite>
  <testsuite name="createModuleDefinitionFromCfnNamespace" errors="0" failures="0" skipped="0" timestamp="2021-10-14T04:58:11" time="1.278" tests="3">
    <testcase classname="createModuleDefinitionFromCfnNamespace base case" name="createModuleDefinitionFromCfnNamespace base case" time="0.002">
    </testcase>
    <testcase classname="createModuleDefinitionFromCfnNamespace Serverless is special-cased to SAM" name="createModuleDefinitionFromCfnNamespace Serverless is special-cased to SAM" time="0.001">
    </testcase>
    <testcase classname="createModuleDefinitionFromCfnNamespace Java artifacts use different package/artifact when module family is not AWS" name="createModuleDefinitionFromCfnNamespace Java artifacts use different package/artifact when module family is not AWS" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-14T04:58:11" time="1.305" tests="6">
    <testcase classname=" Validate augmentation schema for AWS::EC2::VPNConnection" name=" Validate augmentation schema for AWS::EC2::VPNConnection" time="0.004">
    </testcase>
    <testcase classname=" Validate augmentation schema for AWS::Lambda::Function" name=" Validate augmentation schema for AWS::Lambda::Function" time="0.002">
    </testcase>
    <testcase classname=" Validate augmentation schema for AWS::RDS::DBCluster" name=" Validate augmentation schema for AWS::RDS::DBCluster" time="0.01">
    </testcase>
    <testcase classname=" Validate augmentation schema for AWS::RDS::DBInstance" name=" Validate augmentation schema for AWS::RDS::DBInstance" time="0.002">
    </testcase>
    <testcase classname=" Validate augmentation schema for AWS::SNS::Topic" name=" Validate augmentation schema for AWS::SNS::Topic" time="0.002">
    </testcase>
    <testcase classname=" Validate augmentation schema for AWS::SQS::Queue" name=" Validate augmentation schema for AWS::SQS::Queue" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-14T04:58:11" time="1.336" tests="1">
    <testcase classname=" dropTypelessAttributes works correctly" name=" dropTypelessAttributes works correctly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-14T04:58:11" time="1.354" tests="1">
    <testcase classname=" namespaces() includes some namespaces" name=" namespaces() includes some namespaces" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-14T04:58:11" time="1.37" tests="9">
    <testcase classname=" spot-check IAM identity tags" name=" spot-check IAM identity tags" time="0.083">
    </testcase>
    <testcase classname=" IAM AssumeRolePolicy" name=" IAM AssumeRolePolicy" time="0">
    </testcase>
    <testcase classname=" spot-check IAM resource tags" name=" spot-check IAM resource tags" time="0">
    </testcase>
    <testcase classname=" spot-check resource policy resources" name=" spot-check resource policy resources" time="0.001">
    </testcase>
    <testcase classname=" spot-check no misclassified tags" name=" spot-check no misclassified tags" time="0">
    </testcase>
    <testcase classname=" check Lambda permission resource scrutiny" name=" check Lambda permission resource scrutiny" time="0">
    </testcase>
    <testcase classname=" check role managedpolicyarns" name=" check role managedpolicyarns" time="0">
    </testcase>
    <testcase classname=" check securityGroup scrutinies" name=" check securityGroup scrutinies" time="0.001">
    </testcase>
    <testcase classname=" check securityGroupRule scrutinies" name=" check securityGroupRule scrutinies" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-14T04:58:11" time="1.463" tests="174">
    <testcase classname=" spot-check DynamoDB metrics" name=" spot-check DynamoDB metrics" time="0.013">
    </testcase>
    <testcase classname=" spot-check MediaStore metrics" name=" spot-check MediaStore metrics" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ACMPCA" name=" Validate canned metrics for AWS::ACMPCA" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::APS" name=" Validate canned metrics for AWS::APS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AccessAnalyzer" name=" Validate canned metrics for AWS::AccessAnalyzer" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AmazonMQ" name=" Validate canned metrics for AWS::AmazonMQ" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Amplify" name=" Validate canned metrics for AWS::Amplify" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ApiGateway" name=" Validate canned metrics for AWS::ApiGateway" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ApiGatewayV2" name=" Validate canned metrics for AWS::ApiGatewayV2" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AppConfig" name=" Validate canned metrics for AWS::AppConfig" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AppFlow" name=" Validate canned metrics for AWS::AppFlow" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AppIntegrations" name=" Validate canned metrics for AWS::AppIntegrations" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AppMesh" name=" Validate canned metrics for AWS::AppMesh" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AppRunner" name=" Validate canned metrics for AWS::AppRunner" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AppStream" name=" Validate canned metrics for AWS::AppStream" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AppSync" name=" Validate canned metrics for AWS::AppSync" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ApplicationAutoScaling" name=" Validate canned metrics for AWS::ApplicationAutoScaling" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ApplicationInsights" name=" Validate canned metrics for AWS::ApplicationInsights" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Athena" name=" Validate canned metrics for AWS::Athena" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AuditManager" name=" Validate canned metrics for AWS::AuditManager" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AutoScaling" name=" Validate canned metrics for AWS::AutoScaling" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::AutoScalingPlans" name=" Validate canned metrics for AWS::AutoScalingPlans" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Backup" name=" Validate canned metrics for AWS::Backup" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Batch" name=" Validate canned metrics for AWS::Batch" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Budgets" name=" Validate canned metrics for AWS::Budgets" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CE" name=" Validate canned metrics for AWS::CE" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CUR" name=" Validate canned metrics for AWS::CUR" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Cassandra" name=" Validate canned metrics for AWS::Cassandra" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CertificateManager" name=" Validate canned metrics for AWS::CertificateManager" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Chatbot" name=" Validate canned metrics for AWS::Chatbot" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Cloud9" name=" Validate canned metrics for AWS::Cloud9" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CloudFormation" name=" Validate canned metrics for AWS::CloudFormation" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CloudFront" name=" Validate canned metrics for AWS::CloudFront" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CloudTrail" name=" Validate canned metrics for AWS::CloudTrail" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CloudWatch" name=" Validate canned metrics for AWS::CloudWatch" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeArtifact" name=" Validate canned metrics for AWS::CodeArtifact" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeBuild" name=" Validate canned metrics for AWS::CodeBuild" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeCommit" name=" Validate canned metrics for AWS::CodeCommit" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeDeploy" name=" Validate canned metrics for AWS::CodeDeploy" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeGuruProfiler" name=" Validate canned metrics for AWS::CodeGuruProfiler" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeGuruReviewer" name=" Validate canned metrics for AWS::CodeGuruReviewer" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodePipeline" name=" Validate canned metrics for AWS::CodePipeline" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeStar" name=" Validate canned metrics for AWS::CodeStar" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeStarConnections" name=" Validate canned metrics for AWS::CodeStarConnections" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CodeStarNotifications" name=" Validate canned metrics for AWS::CodeStarNotifications" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Cognito" name=" Validate canned metrics for AWS::Cognito" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Config" name=" Validate canned metrics for AWS::Config" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Connect" name=" Validate canned metrics for AWS::Connect" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::CustomerProfiles" name=" Validate canned metrics for AWS::CustomerProfiles" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DAX" name=" Validate canned metrics for AWS::DAX" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DLM" name=" Validate canned metrics for AWS::DLM" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DMS" name=" Validate canned metrics for AWS::DMS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DataBrew" name=" Validate canned metrics for AWS::DataBrew" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DataPipeline" name=" Validate canned metrics for AWS::DataPipeline" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DataSync" name=" Validate canned metrics for AWS::DataSync" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Detective" name=" Validate canned metrics for AWS::Detective" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DevOpsGuru" name=" Validate canned metrics for AWS::DevOpsGuru" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DirectoryService" name=" Validate canned metrics for AWS::DirectoryService" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DocDB" name=" Validate canned metrics for AWS::DocDB" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::DynamoDB" name=" Validate canned metrics for AWS::DynamoDB" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::EC2" name=" Validate canned metrics for AWS::EC2" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ECR" name=" Validate canned metrics for AWS::ECR" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ECS" name=" Validate canned metrics for AWS::ECS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::EFS" name=" Validate canned metrics for AWS::EFS" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::EKS" name=" Validate canned metrics for AWS::EKS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::EMR" name=" Validate canned metrics for AWS::EMR" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::EMRContainers" name=" Validate canned metrics for AWS::EMRContainers" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ElastiCache" name=" Validate canned metrics for AWS::ElastiCache" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ElasticBeanstalk" name=" Validate canned metrics for AWS::ElasticBeanstalk" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ElasticLoadBalancing" name=" Validate canned metrics for AWS::ElasticLoadBalancing" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ElasticLoadBalancingV2" name=" Validate canned metrics for AWS::ElasticLoadBalancingV2" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Elasticsearch" name=" Validate canned metrics for AWS::Elasticsearch" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::EventSchemas" name=" Validate canned metrics for AWS::EventSchemas" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Events" name=" Validate canned metrics for AWS::Events" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::FIS" name=" Validate canned metrics for AWS::FIS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::FMS" name=" Validate canned metrics for AWS::FMS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::FSx" name=" Validate canned metrics for AWS::FSx" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::FinSpace" name=" Validate canned metrics for AWS::FinSpace" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::FraudDetector" name=" Validate canned metrics for AWS::FraudDetector" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::GameLift" name=" Validate canned metrics for AWS::GameLift" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::GlobalAccelerator" name=" Validate canned metrics for AWS::GlobalAccelerator" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Glue" name=" Validate canned metrics for AWS::Glue" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Greengrass" name=" Validate canned metrics for AWS::Greengrass" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::GreengrassV2" name=" Validate canned metrics for AWS::GreengrassV2" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::GroundStation" name=" Validate canned metrics for AWS::GroundStation" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::GuardDuty" name=" Validate canned metrics for AWS::GuardDuty" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::HealthLake" name=" Validate canned metrics for AWS::HealthLake" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IAM" name=" Validate canned metrics for AWS::IAM" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IVS" name=" Validate canned metrics for AWS::IVS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ImageBuilder" name=" Validate canned metrics for AWS::ImageBuilder" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Inspector" name=" Validate canned metrics for AWS::Inspector" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoT1Click" name=" Validate canned metrics for AWS::IoT1Click" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoT" name=" Validate canned metrics for AWS::IoT" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoTAnalytics" name=" Validate canned metrics for AWS::IoTAnalytics" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoTCoreDeviceAdvisor" name=" Validate canned metrics for AWS::IoTCoreDeviceAdvisor" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoTEvents" name=" Validate canned metrics for AWS::IoTEvents" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoTFleetHub" name=" Validate canned metrics for AWS::IoTFleetHub" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoTSiteWise" name=" Validate canned metrics for AWS::IoTSiteWise" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoTThingsGraph" name=" Validate canned metrics for AWS::IoTThingsGraph" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::IoTWireless" name=" Validate canned metrics for AWS::IoTWireless" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::KMS" name=" Validate canned metrics for AWS::KMS" time="0.002">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Kendra" name=" Validate canned metrics for AWS::Kendra" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Kinesis" name=" Validate canned metrics for AWS::Kinesis" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::KinesisAnalytics" name=" Validate canned metrics for AWS::KinesisAnalytics" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::KinesisAnalyticsV2" name=" Validate canned metrics for AWS::KinesisAnalyticsV2" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::KinesisFirehose" name=" Validate canned metrics for AWS::KinesisFirehose" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::LakeFormation" name=" Validate canned metrics for AWS::LakeFormation" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Lambda" name=" Validate canned metrics for AWS::Lambda" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::LicenseManager" name=" Validate canned metrics for AWS::LicenseManager" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Lightsail" name=" Validate canned metrics for AWS::Lightsail" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Location" name=" Validate canned metrics for AWS::Location" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Logs" name=" Validate canned metrics for AWS::Logs" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::LookoutEquipment" name=" Validate canned metrics for AWS::LookoutEquipment" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::LookoutMetrics" name=" Validate canned metrics for AWS::LookoutMetrics" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::LookoutVision" name=" Validate canned metrics for AWS::LookoutVision" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::MSK" name=" Validate canned metrics for AWS::MSK" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::MWAA" name=" Validate canned metrics for AWS::MWAA" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Macie" name=" Validate canned metrics for AWS::Macie" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ManagedBlockchain" name=" Validate canned metrics for AWS::ManagedBlockchain" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::MediaConnect" name=" Validate canned metrics for AWS::MediaConnect" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::MediaConvert" name=" Validate canned metrics for AWS::MediaConvert" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::MediaLive" name=" Validate canned metrics for AWS::MediaLive" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::MediaPackage" name=" Validate canned metrics for AWS::MediaPackage" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::MediaStore" name=" Validate canned metrics for AWS::MediaStore" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::MemoryDB" name=" Validate canned metrics for AWS::MemoryDB" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Neptune" name=" Validate canned metrics for AWS::Neptune" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::NetworkFirewall" name=" Validate canned metrics for AWS::NetworkFirewall" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::NetworkManager" name=" Validate canned metrics for AWS::NetworkManager" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::NimbleStudio" name=" Validate canned metrics for AWS::NimbleStudio" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::OpenSearchService" name=" Validate canned metrics for AWS::OpenSearchService" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::OpsWorks" name=" Validate canned metrics for AWS::OpsWorks" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::OpsWorksCM" name=" Validate canned metrics for AWS::OpsWorksCM" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Pinpoint" name=" Validate canned metrics for AWS::Pinpoint" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::PinpointEmail" name=" Validate canned metrics for AWS::PinpointEmail" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::QLDB" name=" Validate canned metrics for AWS::QLDB" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::QuickSight" name=" Validate canned metrics for AWS::QuickSight" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::RAM" name=" Validate canned metrics for AWS::RAM" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::RDS" name=" Validate canned metrics for AWS::RDS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Redshift" name=" Validate canned metrics for AWS::Redshift" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ResourceGroups" name=" Validate canned metrics for AWS::ResourceGroups" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::RoboMaker" name=" Validate canned metrics for AWS::RoboMaker" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Route53" name=" Validate canned metrics for AWS::Route53" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Route53RecoveryControl" name=" Validate canned metrics for AWS::Route53RecoveryControl" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Route53RecoveryReadiness" name=" Validate canned metrics for AWS::Route53RecoveryReadiness" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Route53Resolver" name=" Validate canned metrics for AWS::Route53Resolver" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::S3" name=" Validate canned metrics for AWS::S3" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::S3ObjectLambda" name=" Validate canned metrics for AWS::S3ObjectLambda" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::S3Outposts" name=" Validate canned metrics for AWS::S3Outposts" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SDB" name=" Validate canned metrics for AWS::SDB" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SES" name=" Validate canned metrics for AWS::SES" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SNS" name=" Validate canned metrics for AWS::SNS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SQS" name=" Validate canned metrics for AWS::SQS" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SSM" name=" Validate canned metrics for AWS::SSM" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SSMContacts" name=" Validate canned metrics for AWS::SSMContacts" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SSMIncidents" name=" Validate canned metrics for AWS::SSMIncidents" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SSO" name=" Validate canned metrics for AWS::SSO" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SageMaker" name=" Validate canned metrics for AWS::SageMaker" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SecretsManager" name=" Validate canned metrics for AWS::SecretsManager" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::SecurityHub" name=" Validate canned metrics for AWS::SecurityHub" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Serverless" name=" Validate canned metrics for AWS::Serverless" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ServiceCatalog" name=" Validate canned metrics for AWS::ServiceCatalog" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ServiceCatalogAppRegistry" name=" Validate canned metrics for AWS::ServiceCatalogAppRegistry" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::ServiceDiscovery" name=" Validate canned metrics for AWS::ServiceDiscovery" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Signer" name=" Validate canned metrics for AWS::Signer" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::StepFunctions" name=" Validate canned metrics for AWS::StepFunctions" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Synthetics" name=" Validate canned metrics for AWS::Synthetics" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Timestream" name=" Validate canned metrics for AWS::Timestream" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::Transfer" name=" Validate canned metrics for AWS::Transfer" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::WAF" name=" Validate canned metrics for AWS::WAF" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::WAFRegional" name=" Validate canned metrics for AWS::WAFRegional" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::WAFv2" name=" Validate canned metrics for AWS::WAFv2" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::WorkSpaces" name=" Validate canned metrics for AWS::WorkSpaces" time="0.001">
    </testcase>
    <testcase classname=" Validate canned metrics for AWS::XRay" name=" Validate canned metrics for AWS::XRay" time="0">
    </testcase>
    <testcase classname=" Validate canned metrics for Alexa::ASK" name=" Validate canned metrics for Alexa::ASK" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-14T04:58:11" time="5.599" tests="811">
    <testcase classname=" filteredSpecification(/^AWS::S3::.*/)" name=" filteredSpecification(/^AWS::S3::.*/)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(s =&gt; s.startsWith(&quot;AWS::S3::&quot;)" name=" filteredSpecification(s =&gt; s.startsWith(&quot;AWS::S3::&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ACMPCA::Certificate&quot;)" name=" filteredSpecification(&quot;AWS::ACMPCA::Certificate&quot;)" time="0.021">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ACMPCA::CertificateAuthority&quot;)" name=" filteredSpecification(&quot;AWS::ACMPCA::CertificateAuthority&quot;)" time="0.015">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ACMPCA::CertificateAuthorityActivation&quot;)" name=" filteredSpecification(&quot;AWS::ACMPCA::CertificateAuthorityActivation&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ACMPCA::Permission&quot;)" name=" filteredSpecification(&quot;AWS::ACMPCA::Permission&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::APS::RuleGroupsNamespace&quot;)" name=" filteredSpecification(&quot;AWS::APS::RuleGroupsNamespace&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::APS::Workspace&quot;)" name=" filteredSpecification(&quot;AWS::APS::Workspace&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AccessAnalyzer::Analyzer&quot;)" name=" filteredSpecification(&quot;AWS::AccessAnalyzer::Analyzer&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AmazonMQ::Broker&quot;)" name=" filteredSpecification(&quot;AWS::AmazonMQ::Broker&quot;)" time="0.013">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AmazonMQ::Configuration&quot;)" name=" filteredSpecification(&quot;AWS::AmazonMQ::Configuration&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AmazonMQ::ConfigurationAssociation&quot;)" name=" filteredSpecification(&quot;AWS::AmazonMQ::ConfigurationAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Amplify::App&quot;)" name=" filteredSpecification(&quot;AWS::Amplify::App&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Amplify::Branch&quot;)" name=" filteredSpecification(&quot;AWS::Amplify::Branch&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Amplify::Domain&quot;)" name=" filteredSpecification(&quot;AWS::Amplify::Domain&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::Account&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::Account&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::ApiKey&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::ApiKey&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::Authorizer&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::Authorizer&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::BasePathMapping&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::BasePathMapping&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::ClientCertificate&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::ClientCertificate&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::Deployment&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::Deployment&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::DocumentationPart&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::DocumentationPart&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::DocumentationVersion&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::DocumentationVersion&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::DomainName&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::DomainName&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::GatewayResponse&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::GatewayResponse&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::Method&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::Method&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::Model&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::Model&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::RequestValidator&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::RequestValidator&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::Resource&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::Resource&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::RestApi&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::RestApi&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::Stage&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::Stage&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::UsagePlan&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::UsagePlan&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::UsagePlanKey&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::UsagePlanKey&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGateway::VpcLink&quot;)" name=" filteredSpecification(&quot;AWS::ApiGateway::VpcLink&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::Api&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::Api&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::ApiGatewayManagedOverrides&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::ApiGatewayManagedOverrides&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::ApiMapping&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::ApiMapping&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::Authorizer&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::Authorizer&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::Deployment&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::Deployment&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::DomainName&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::DomainName&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::Integration&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::Integration&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::IntegrationResponse&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::IntegrationResponse&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::Model&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::Model&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::Route&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::Route&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::RouteResponse&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::RouteResponse&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::Stage&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::Stage&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApiGatewayV2::VpcLink&quot;)" name=" filteredSpecification(&quot;AWS::ApiGatewayV2::VpcLink&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppConfig::Application&quot;)" name=" filteredSpecification(&quot;AWS::AppConfig::Application&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppConfig::ConfigurationProfile&quot;)" name=" filteredSpecification(&quot;AWS::AppConfig::ConfigurationProfile&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppConfig::Deployment&quot;)" name=" filteredSpecification(&quot;AWS::AppConfig::Deployment&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppConfig::DeploymentStrategy&quot;)" name=" filteredSpecification(&quot;AWS::AppConfig::DeploymentStrategy&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppConfig::Environment&quot;)" name=" filteredSpecification(&quot;AWS::AppConfig::Environment&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppConfig::HostedConfigurationVersion&quot;)" name=" filteredSpecification(&quot;AWS::AppConfig::HostedConfigurationVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppFlow::ConnectorProfile&quot;)" name=" filteredSpecification(&quot;AWS::AppFlow::ConnectorProfile&quot;)" time="0.025">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppFlow::Flow&quot;)" name=" filteredSpecification(&quot;AWS::AppFlow::Flow&quot;)" time="0.029">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppIntegrations::EventIntegration&quot;)" name=" filteredSpecification(&quot;AWS::AppIntegrations::EventIntegration&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppMesh::GatewayRoute&quot;)" name=" filteredSpecification(&quot;AWS::AppMesh::GatewayRoute&quot;)" time="0.017">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppMesh::Mesh&quot;)" name=" filteredSpecification(&quot;AWS::AppMesh::Mesh&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppMesh::Route&quot;)" name=" filteredSpecification(&quot;AWS::AppMesh::Route&quot;)" time="0.02">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppMesh::VirtualGateway&quot;)" name=" filteredSpecification(&quot;AWS::AppMesh::VirtualGateway&quot;)" time="0.018">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppMesh::VirtualNode&quot;)" name=" filteredSpecification(&quot;AWS::AppMesh::VirtualNode&quot;)" time="0.026">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppMesh::VirtualRouter&quot;)" name=" filteredSpecification(&quot;AWS::AppMesh::VirtualRouter&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppMesh::VirtualService&quot;)" name=" filteredSpecification(&quot;AWS::AppMesh::VirtualService&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppRunner::Service&quot;)" name=" filteredSpecification(&quot;AWS::AppRunner::Service&quot;)" time="0.012">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppStream::DirectoryConfig&quot;)" name=" filteredSpecification(&quot;AWS::AppStream::DirectoryConfig&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppStream::Fleet&quot;)" name=" filteredSpecification(&quot;AWS::AppStream::Fleet&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppStream::ImageBuilder&quot;)" name=" filteredSpecification(&quot;AWS::AppStream::ImageBuilder&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppStream::Stack&quot;)" name=" filteredSpecification(&quot;AWS::AppStream::Stack&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppStream::StackFleetAssociation&quot;)" name=" filteredSpecification(&quot;AWS::AppStream::StackFleetAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppStream::StackUserAssociation&quot;)" name=" filteredSpecification(&quot;AWS::AppStream::StackUserAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppStream::User&quot;)" name=" filteredSpecification(&quot;AWS::AppStream::User&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppSync::ApiCache&quot;)" name=" filteredSpecification(&quot;AWS::AppSync::ApiCache&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppSync::ApiKey&quot;)" name=" filteredSpecification(&quot;AWS::AppSync::ApiKey&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppSync::DataSource&quot;)" name=" filteredSpecification(&quot;AWS::AppSync::DataSource&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppSync::FunctionConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::AppSync::FunctionConfiguration&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppSync::GraphQLApi&quot;)" name=" filteredSpecification(&quot;AWS::AppSync::GraphQLApi&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppSync::GraphQLSchema&quot;)" name=" filteredSpecification(&quot;AWS::AppSync::GraphQLSchema&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AppSync::Resolver&quot;)" name=" filteredSpecification(&quot;AWS::AppSync::Resolver&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApplicationAutoScaling::ScalableTarget&quot;)" name=" filteredSpecification(&quot;AWS::ApplicationAutoScaling::ScalableTarget&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApplicationAutoScaling::ScalingPolicy&quot;)" name=" filteredSpecification(&quot;AWS::ApplicationAutoScaling::ScalingPolicy&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ApplicationInsights::Application&quot;)" name=" filteredSpecification(&quot;AWS::ApplicationInsights::Application&quot;)" time="0.012">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Athena::DataCatalog&quot;)" name=" filteredSpecification(&quot;AWS::Athena::DataCatalog&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Athena::NamedQuery&quot;)" name=" filteredSpecification(&quot;AWS::Athena::NamedQuery&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Athena::PreparedStatement&quot;)" name=" filteredSpecification(&quot;AWS::Athena::PreparedStatement&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Athena::WorkGroup&quot;)" name=" filteredSpecification(&quot;AWS::Athena::WorkGroup&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AuditManager::Assessment&quot;)" name=" filteredSpecification(&quot;AWS::AuditManager::Assessment&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AutoScaling::AutoScalingGroup&quot;)" name=" filteredSpecification(&quot;AWS::AutoScaling::AutoScalingGroup&quot;)" time="0.013">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AutoScaling::LaunchConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::AutoScaling::LaunchConfiguration&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AutoScaling::LifecycleHook&quot;)" name=" filteredSpecification(&quot;AWS::AutoScaling::LifecycleHook&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AutoScaling::ScalingPolicy&quot;)" name=" filteredSpecification(&quot;AWS::AutoScaling::ScalingPolicy&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AutoScaling::ScheduledAction&quot;)" name=" filteredSpecification(&quot;AWS::AutoScaling::ScheduledAction&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AutoScaling::WarmPool&quot;)" name=" filteredSpecification(&quot;AWS::AutoScaling::WarmPool&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::AutoScalingPlans::ScalingPlan&quot;)" name=" filteredSpecification(&quot;AWS::AutoScalingPlans::ScalingPlan&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Backup::BackupPlan&quot;)" name=" filteredSpecification(&quot;AWS::Backup::BackupPlan&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Backup::BackupSelection&quot;)" name=" filteredSpecification(&quot;AWS::Backup::BackupSelection&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Backup::BackupVault&quot;)" name=" filteredSpecification(&quot;AWS::Backup::BackupVault&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Backup::Framework&quot;)" name=" filteredSpecification(&quot;AWS::Backup::Framework&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Backup::ReportPlan&quot;)" name=" filteredSpecification(&quot;AWS::Backup::ReportPlan&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Batch::ComputeEnvironment&quot;)" name=" filteredSpecification(&quot;AWS::Batch::ComputeEnvironment&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Batch::JobDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Batch::JobDefinition&quot;)" time="0.025">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Batch::JobQueue&quot;)" name=" filteredSpecification(&quot;AWS::Batch::JobQueue&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Budgets::Budget&quot;)" name=" filteredSpecification(&quot;AWS::Budgets::Budget&quot;)" time="0.015">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Budgets::BudgetsAction&quot;)" name=" filteredSpecification(&quot;AWS::Budgets::BudgetsAction&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CE::AnomalyMonitor&quot;)" name=" filteredSpecification(&quot;AWS::CE::AnomalyMonitor&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CE::AnomalySubscription&quot;)" name=" filteredSpecification(&quot;AWS::CE::AnomalySubscription&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CE::CostCategory&quot;)" name=" filteredSpecification(&quot;AWS::CE::CostCategory&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CUR::ReportDefinition&quot;)" name=" filteredSpecification(&quot;AWS::CUR::ReportDefinition&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cassandra::Keyspace&quot;)" name=" filteredSpecification(&quot;AWS::Cassandra::Keyspace&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cassandra::Table&quot;)" name=" filteredSpecification(&quot;AWS::Cassandra::Table&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CertificateManager::Account&quot;)" name=" filteredSpecification(&quot;AWS::CertificateManager::Account&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CertificateManager::Certificate&quot;)" name=" filteredSpecification(&quot;AWS::CertificateManager::Certificate&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Chatbot::SlackChannelConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::Chatbot::SlackChannelConfiguration&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cloud9::EnvironmentEC2&quot;)" name=" filteredSpecification(&quot;AWS::Cloud9::EnvironmentEC2&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::CustomResource&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::CustomResource&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::Macro&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::Macro&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::ModuleDefaultVersion&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::ModuleDefaultVersion&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::ModuleVersion&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::ModuleVersion&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::PublicTypeVersion&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::PublicTypeVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::Publisher&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::Publisher&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::ResourceDefaultVersion&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::ResourceDefaultVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::ResourceVersion&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::ResourceVersion&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::Stack&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::Stack&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::StackSet&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::StackSet&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::TypeActivation&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::TypeActivation&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::WaitCondition&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::WaitCondition&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFormation::WaitConditionHandle&quot;)" name=" filteredSpecification(&quot;AWS::CloudFormation::WaitConditionHandle&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::CachePolicy&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::CachePolicy&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::CloudFrontOriginAccessIdentity&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::CloudFrontOriginAccessIdentity&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::Distribution&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::Distribution&quot;)" time="0.027">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::Function&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::Function&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::KeyGroup&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::KeyGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::OriginRequestPolicy&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::OriginRequestPolicy&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::PublicKey&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::PublicKey&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::RealtimeLogConfig&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::RealtimeLogConfig&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudFront::StreamingDistribution&quot;)" name=" filteredSpecification(&quot;AWS::CloudFront::StreamingDistribution&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudTrail::Trail&quot;)" name=" filteredSpecification(&quot;AWS::CloudTrail::Trail&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudWatch::Alarm&quot;)" name=" filteredSpecification(&quot;AWS::CloudWatch::Alarm&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudWatch::AnomalyDetector&quot;)" name=" filteredSpecification(&quot;AWS::CloudWatch::AnomalyDetector&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudWatch::CompositeAlarm&quot;)" name=" filteredSpecification(&quot;AWS::CloudWatch::CompositeAlarm&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudWatch::Dashboard&quot;)" name=" filteredSpecification(&quot;AWS::CloudWatch::Dashboard&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudWatch::InsightRule&quot;)" name=" filteredSpecification(&quot;AWS::CloudWatch::InsightRule&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CloudWatch::MetricStream&quot;)" name=" filteredSpecification(&quot;AWS::CloudWatch::MetricStream&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeArtifact::Domain&quot;)" name=" filteredSpecification(&quot;AWS::CodeArtifact::Domain&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeArtifact::Repository&quot;)" name=" filteredSpecification(&quot;AWS::CodeArtifact::Repository&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeBuild::Project&quot;)" name=" filteredSpecification(&quot;AWS::CodeBuild::Project&quot;)" time="0.022">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeBuild::ReportGroup&quot;)" name=" filteredSpecification(&quot;AWS::CodeBuild::ReportGroup&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeBuild::SourceCredential&quot;)" name=" filteredSpecification(&quot;AWS::CodeBuild::SourceCredential&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeCommit::Repository&quot;)" name=" filteredSpecification(&quot;AWS::CodeCommit::Repository&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeDeploy::Application&quot;)" name=" filteredSpecification(&quot;AWS::CodeDeploy::Application&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeDeploy::DeploymentConfig&quot;)" name=" filteredSpecification(&quot;AWS::CodeDeploy::DeploymentConfig&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeDeploy::DeploymentGroup&quot;)" name=" filteredSpecification(&quot;AWS::CodeDeploy::DeploymentGroup&quot;)" time="0.016">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeGuruProfiler::ProfilingGroup&quot;)" name=" filteredSpecification(&quot;AWS::CodeGuruProfiler::ProfilingGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeGuruReviewer::RepositoryAssociation&quot;)" name=" filteredSpecification(&quot;AWS::CodeGuruReviewer::RepositoryAssociation&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodePipeline::CustomActionType&quot;)" name=" filteredSpecification(&quot;AWS::CodePipeline::CustomActionType&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodePipeline::Pipeline&quot;)" name=" filteredSpecification(&quot;AWS::CodePipeline::Pipeline&quot;)" time="0.012">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodePipeline::Webhook&quot;)" name=" filteredSpecification(&quot;AWS::CodePipeline::Webhook&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeStar::GitHubRepository&quot;)" name=" filteredSpecification(&quot;AWS::CodeStar::GitHubRepository&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeStarConnections::Connection&quot;)" name=" filteredSpecification(&quot;AWS::CodeStarConnections::Connection&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CodeStarNotifications::NotificationRule&quot;)" name=" filteredSpecification(&quot;AWS::CodeStarNotifications::NotificationRule&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::IdentityPool&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::IdentityPool&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::IdentityPoolRoleAttachment&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::IdentityPoolRoleAttachment&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPool&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPool&quot;)" time="0.018">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolClient&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolClient&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolDomain&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolDomain&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolGroup&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolIdentityProvider&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolIdentityProvider&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolResourceServer&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolResourceServer&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolRiskConfigurationAttachment&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolRiskConfigurationAttachment&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolUICustomizationAttachment&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolUICustomizationAttachment&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolUser&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolUser&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Cognito::UserPoolUserToGroupAttachment&quot;)" name=" filteredSpecification(&quot;AWS::Cognito::UserPoolUserToGroupAttachment&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::AggregationAuthorization&quot;)" name=" filteredSpecification(&quot;AWS::Config::AggregationAuthorization&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::ConfigRule&quot;)" name=" filteredSpecification(&quot;AWS::Config::ConfigRule&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::ConfigurationAggregator&quot;)" name=" filteredSpecification(&quot;AWS::Config::ConfigurationAggregator&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::ConfigurationRecorder&quot;)" name=" filteredSpecification(&quot;AWS::Config::ConfigurationRecorder&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::ConformancePack&quot;)" name=" filteredSpecification(&quot;AWS::Config::ConformancePack&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::DeliveryChannel&quot;)" name=" filteredSpecification(&quot;AWS::Config::DeliveryChannel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::OrganizationConfigRule&quot;)" name=" filteredSpecification(&quot;AWS::Config::OrganizationConfigRule&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::OrganizationConformancePack&quot;)" name=" filteredSpecification(&quot;AWS::Config::OrganizationConformancePack&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::RemediationConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::Config::RemediationConfiguration&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Config::StoredQuery&quot;)" name=" filteredSpecification(&quot;AWS::Config::StoredQuery&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Connect::QuickConnect&quot;)" name=" filteredSpecification(&quot;AWS::Connect::QuickConnect&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CustomerProfiles::Domain&quot;)" name=" filteredSpecification(&quot;AWS::CustomerProfiles::Domain&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CustomerProfiles::Integration&quot;)" name=" filteredSpecification(&quot;AWS::CustomerProfiles::Integration&quot;)" time="0.022">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::CustomerProfiles::ObjectType&quot;)" name=" filteredSpecification(&quot;AWS::CustomerProfiles::ObjectType&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DAX::Cluster&quot;)" name=" filteredSpecification(&quot;AWS::DAX::Cluster&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DAX::ParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::DAX::ParameterGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DAX::SubnetGroup&quot;)" name=" filteredSpecification(&quot;AWS::DAX::SubnetGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DLM::LifecyclePolicy&quot;)" name=" filteredSpecification(&quot;AWS::DLM::LifecyclePolicy&quot;)" time="0.016">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DMS::Certificate&quot;)" name=" filteredSpecification(&quot;AWS::DMS::Certificate&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DMS::Endpoint&quot;)" name=" filteredSpecification(&quot;AWS::DMS::Endpoint&quot;)" time="0.018">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DMS::EventSubscription&quot;)" name=" filteredSpecification(&quot;AWS::DMS::EventSubscription&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DMS::ReplicationInstance&quot;)" name=" filteredSpecification(&quot;AWS::DMS::ReplicationInstance&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DMS::ReplicationSubnetGroup&quot;)" name=" filteredSpecification(&quot;AWS::DMS::ReplicationSubnetGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DMS::ReplicationTask&quot;)" name=" filteredSpecification(&quot;AWS::DMS::ReplicationTask&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataBrew::Dataset&quot;)" name=" filteredSpecification(&quot;AWS::DataBrew::Dataset&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataBrew::Job&quot;)" name=" filteredSpecification(&quot;AWS::DataBrew::Job&quot;)" time="0.014">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataBrew::Project&quot;)" name=" filteredSpecification(&quot;AWS::DataBrew::Project&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataBrew::Recipe&quot;)" name=" filteredSpecification(&quot;AWS::DataBrew::Recipe&quot;)" time="0.024">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataBrew::Schedule&quot;)" name=" filteredSpecification(&quot;AWS::DataBrew::Schedule&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataPipeline::Pipeline&quot;)" name=" filteredSpecification(&quot;AWS::DataPipeline::Pipeline&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataSync::Agent&quot;)" name=" filteredSpecification(&quot;AWS::DataSync::Agent&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataSync::LocationEFS&quot;)" name=" filteredSpecification(&quot;AWS::DataSync::LocationEFS&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataSync::LocationFSxWindows&quot;)" name=" filteredSpecification(&quot;AWS::DataSync::LocationFSxWindows&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataSync::LocationNFS&quot;)" name=" filteredSpecification(&quot;AWS::DataSync::LocationNFS&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataSync::LocationObjectStorage&quot;)" name=" filteredSpecification(&quot;AWS::DataSync::LocationObjectStorage&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataSync::LocationS3&quot;)" name=" filteredSpecification(&quot;AWS::DataSync::LocationS3&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataSync::LocationSMB&quot;)" name=" filteredSpecification(&quot;AWS::DataSync::LocationSMB&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DataSync::Task&quot;)" name=" filteredSpecification(&quot;AWS::DataSync::Task&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Detective::Graph&quot;)" name=" filteredSpecification(&quot;AWS::Detective::Graph&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Detective::MemberInvitation&quot;)" name=" filteredSpecification(&quot;AWS::Detective::MemberInvitation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DevOpsGuru::NotificationChannel&quot;)" name=" filteredSpecification(&quot;AWS::DevOpsGuru::NotificationChannel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DevOpsGuru::ResourceCollection&quot;)" name=" filteredSpecification(&quot;AWS::DevOpsGuru::ResourceCollection&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DirectoryService::MicrosoftAD&quot;)" name=" filteredSpecification(&quot;AWS::DirectoryService::MicrosoftAD&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DirectoryService::SimpleAD&quot;)" name=" filteredSpecification(&quot;AWS::DirectoryService::SimpleAD&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DocDB::DBCluster&quot;)" name=" filteredSpecification(&quot;AWS::DocDB::DBCluster&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DocDB::DBClusterParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::DocDB::DBClusterParameterGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DocDB::DBInstance&quot;)" name=" filteredSpecification(&quot;AWS::DocDB::DBInstance&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DocDB::DBSubnetGroup&quot;)" name=" filteredSpecification(&quot;AWS::DocDB::DBSubnetGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DynamoDB::GlobalTable&quot;)" name=" filteredSpecification(&quot;AWS::DynamoDB::GlobalTable&quot;)" time="0.014">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::DynamoDB::Table&quot;)" name=" filteredSpecification(&quot;AWS::DynamoDB::Table&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::CapacityReservation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::CapacityReservation&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::CarrierGateway&quot;)" name=" filteredSpecification(&quot;AWS::EC2::CarrierGateway&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::ClientVpnAuthorizationRule&quot;)" name=" filteredSpecification(&quot;AWS::EC2::ClientVpnAuthorizationRule&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::ClientVpnEndpoint&quot;)" name=" filteredSpecification(&quot;AWS::EC2::ClientVpnEndpoint&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::ClientVpnRoute&quot;)" name=" filteredSpecification(&quot;AWS::EC2::ClientVpnRoute&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::ClientVpnTargetNetworkAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::ClientVpnTargetNetworkAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::CustomerGateway&quot;)" name=" filteredSpecification(&quot;AWS::EC2::CustomerGateway&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::DHCPOptions&quot;)" name=" filteredSpecification(&quot;AWS::EC2::DHCPOptions&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::EC2Fleet&quot;)" name=" filteredSpecification(&quot;AWS::EC2::EC2Fleet&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::EIP&quot;)" name=" filteredSpecification(&quot;AWS::EC2::EIP&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::EIPAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::EIPAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::EgressOnlyInternetGateway&quot;)" name=" filteredSpecification(&quot;AWS::EC2::EgressOnlyInternetGateway&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::EnclaveCertificateIamRoleAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::EnclaveCertificateIamRoleAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::FlowLog&quot;)" name=" filteredSpecification(&quot;AWS::EC2::FlowLog&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::GatewayRouteTableAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::GatewayRouteTableAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::Host&quot;)" name=" filteredSpecification(&quot;AWS::EC2::Host&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::Instance&quot;)" name=" filteredSpecification(&quot;AWS::EC2::Instance&quot;)" time="0.018">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::InternetGateway&quot;)" name=" filteredSpecification(&quot;AWS::EC2::InternetGateway&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::LaunchTemplate&quot;)" name=" filteredSpecification(&quot;AWS::EC2::LaunchTemplate&quot;)" time="0.025">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::LocalGatewayRoute&quot;)" name=" filteredSpecification(&quot;AWS::EC2::LocalGatewayRoute&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::LocalGatewayRouteTableVPCAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::LocalGatewayRouteTableVPCAssociation&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::NatGateway&quot;)" name=" filteredSpecification(&quot;AWS::EC2::NatGateway&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::NetworkAcl&quot;)" name=" filteredSpecification(&quot;AWS::EC2::NetworkAcl&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::NetworkAclEntry&quot;)" name=" filteredSpecification(&quot;AWS::EC2::NetworkAclEntry&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::NetworkInsightsAnalysis&quot;)" name=" filteredSpecification(&quot;AWS::EC2::NetworkInsightsAnalysis&quot;)" time="0.024">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::NetworkInsightsPath&quot;)" name=" filteredSpecification(&quot;AWS::EC2::NetworkInsightsPath&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::NetworkInterface&quot;)" name=" filteredSpecification(&quot;AWS::EC2::NetworkInterface&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::NetworkInterfaceAttachment&quot;)" name=" filteredSpecification(&quot;AWS::EC2::NetworkInterfaceAttachment&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::NetworkInterfacePermission&quot;)" name=" filteredSpecification(&quot;AWS::EC2::NetworkInterfacePermission&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::PlacementGroup&quot;)" name=" filteredSpecification(&quot;AWS::EC2::PlacementGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::PrefixList&quot;)" name=" filteredSpecification(&quot;AWS::EC2::PrefixList&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::Route&quot;)" name=" filteredSpecification(&quot;AWS::EC2::Route&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::RouteTable&quot;)" name=" filteredSpecification(&quot;AWS::EC2::RouteTable&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::SecurityGroup&quot;)" name=" filteredSpecification(&quot;AWS::EC2::SecurityGroup&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::SecurityGroupEgress&quot;)" name=" filteredSpecification(&quot;AWS::EC2::SecurityGroupEgress&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::SecurityGroupIngress&quot;)" name=" filteredSpecification(&quot;AWS::EC2::SecurityGroupIngress&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::SpotFleet&quot;)" name=" filteredSpecification(&quot;AWS::EC2::SpotFleet&quot;)" time="0.019">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::Subnet&quot;)" name=" filteredSpecification(&quot;AWS::EC2::Subnet&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::SubnetCidrBlock&quot;)" name=" filteredSpecification(&quot;AWS::EC2::SubnetCidrBlock&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::SubnetNetworkAclAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::SubnetNetworkAclAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::SubnetRouteTableAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::SubnetRouteTableAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TrafficMirrorFilter&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TrafficMirrorFilter&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TrafficMirrorFilterRule&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TrafficMirrorFilterRule&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TrafficMirrorSession&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TrafficMirrorSession&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TrafficMirrorTarget&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TrafficMirrorTarget&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGateway&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGateway&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayAttachment&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayAttachment&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayConnect&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayConnect&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayMulticastDomain&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayMulticastDomain&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayMulticastDomainAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayMulticastDomainAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayMulticastGroupMember&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayMulticastGroupMember&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayMulticastGroupSource&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayMulticastGroupSource&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayPeeringAttachment&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayPeeringAttachment&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayRoute&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayRoute&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayRouteTable&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayRouteTable&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayRouteTableAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayRouteTableAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayRouteTablePropagation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayRouteTablePropagation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::TransitGatewayVpcAttachment&quot;)" name=" filteredSpecification(&quot;AWS::EC2::TransitGatewayVpcAttachment&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPC&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPC&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPCCidrBlock&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPCCidrBlock&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPCDHCPOptionsAssociation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPCDHCPOptionsAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPCEndpoint&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPCEndpoint&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPCEndpointConnectionNotification&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPCEndpointConnectionNotification&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPCEndpointService&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPCEndpointService&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPCEndpointServicePermissions&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPCEndpointServicePermissions&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPCGatewayAttachment&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPCGatewayAttachment&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPCPeeringConnection&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPCPeeringConnection&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPNConnection&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPNConnection&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPNConnectionRoute&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPNConnectionRoute&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPNGateway&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPNGateway&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VPNGatewayRoutePropagation&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VPNGatewayRoutePropagation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::Volume&quot;)" name=" filteredSpecification(&quot;AWS::EC2::Volume&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EC2::VolumeAttachment&quot;)" name=" filteredSpecification(&quot;AWS::EC2::VolumeAttachment&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECR::PublicRepository&quot;)" name=" filteredSpecification(&quot;AWS::ECR::PublicRepository&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECR::RegistryPolicy&quot;)" name=" filteredSpecification(&quot;AWS::ECR::RegistryPolicy&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECR::ReplicationConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::ECR::ReplicationConfiguration&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECR::Repository&quot;)" name=" filteredSpecification(&quot;AWS::ECR::Repository&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECS::CapacityProvider&quot;)" name=" filteredSpecification(&quot;AWS::ECS::CapacityProvider&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECS::Cluster&quot;)" name=" filteredSpecification(&quot;AWS::ECS::Cluster&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECS::ClusterCapacityProviderAssociations&quot;)" name=" filteredSpecification(&quot;AWS::ECS::ClusterCapacityProviderAssociations&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECS::PrimaryTaskSet&quot;)" name=" filteredSpecification(&quot;AWS::ECS::PrimaryTaskSet&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECS::Service&quot;)" name=" filteredSpecification(&quot;AWS::ECS::Service&quot;)" time="0.012">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECS::TaskDefinition&quot;)" name=" filteredSpecification(&quot;AWS::ECS::TaskDefinition&quot;)" time="0.027">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ECS::TaskSet&quot;)" name=" filteredSpecification(&quot;AWS::ECS::TaskSet&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EFS::AccessPoint&quot;)" name=" filteredSpecification(&quot;AWS::EFS::AccessPoint&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EFS::FileSystem&quot;)" name=" filteredSpecification(&quot;AWS::EFS::FileSystem&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EFS::MountTarget&quot;)" name=" filteredSpecification(&quot;AWS::EFS::MountTarget&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EKS::Addon&quot;)" name=" filteredSpecification(&quot;AWS::EKS::Addon&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EKS::Cluster&quot;)" name=" filteredSpecification(&quot;AWS::EKS::Cluster&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EKS::FargateProfile&quot;)" name=" filteredSpecification(&quot;AWS::EKS::FargateProfile&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EKS::Nodegroup&quot;)" name=" filteredSpecification(&quot;AWS::EKS::Nodegroup&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EMR::Cluster&quot;)" name=" filteredSpecification(&quot;AWS::EMR::Cluster&quot;)" time="0.028">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EMR::InstanceFleetConfig&quot;)" name=" filteredSpecification(&quot;AWS::EMR::InstanceFleetConfig&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EMR::InstanceGroupConfig&quot;)" name=" filteredSpecification(&quot;AWS::EMR::InstanceGroupConfig&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EMR::SecurityConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::EMR::SecurityConfiguration&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EMR::Step&quot;)" name=" filteredSpecification(&quot;AWS::EMR::Step&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EMR::Studio&quot;)" name=" filteredSpecification(&quot;AWS::EMR::Studio&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EMR::StudioSessionMapping&quot;)" name=" filteredSpecification(&quot;AWS::EMR::StudioSessionMapping&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EMRContainers::VirtualCluster&quot;)" name=" filteredSpecification(&quot;AWS::EMRContainers::VirtualCluster&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::CacheCluster&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::CacheCluster&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::GlobalReplicationGroup&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::GlobalReplicationGroup&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::ParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::ParameterGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::ReplicationGroup&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::ReplicationGroup&quot;)" time="0.012">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::SecurityGroup&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::SecurityGroup&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::SecurityGroupIngress&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::SecurityGroupIngress&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::SubnetGroup&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::SubnetGroup&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::User&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::User&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElastiCache::UserGroup&quot;)" name=" filteredSpecification(&quot;AWS::ElastiCache::UserGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticBeanstalk::Application&quot;)" name=" filteredSpecification(&quot;AWS::ElasticBeanstalk::Application&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticBeanstalk::ApplicationVersion&quot;)" name=" filteredSpecification(&quot;AWS::ElasticBeanstalk::ApplicationVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticBeanstalk::ConfigurationTemplate&quot;)" name=" filteredSpecification(&quot;AWS::ElasticBeanstalk::ConfigurationTemplate&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticBeanstalk::Environment&quot;)" name=" filteredSpecification(&quot;AWS::ElasticBeanstalk::Environment&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticLoadBalancing::LoadBalancer&quot;)" name=" filteredSpecification(&quot;AWS::ElasticLoadBalancing::LoadBalancer&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::Listener&quot;)" name=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::Listener&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::ListenerCertificate&quot;)" name=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::ListenerCertificate&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::ListenerRule&quot;)" name=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::ListenerRule&quot;)" time="0.016">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::LoadBalancer&quot;)" name=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::LoadBalancer&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::TargetGroup&quot;)" name=" filteredSpecification(&quot;AWS::ElasticLoadBalancingV2::TargetGroup&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Elasticsearch::Domain&quot;)" name=" filteredSpecification(&quot;AWS::Elasticsearch::Domain&quot;)" time="0.013">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EventSchemas::Discoverer&quot;)" name=" filteredSpecification(&quot;AWS::EventSchemas::Discoverer&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EventSchemas::Registry&quot;)" name=" filteredSpecification(&quot;AWS::EventSchemas::Registry&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EventSchemas::RegistryPolicy&quot;)" name=" filteredSpecification(&quot;AWS::EventSchemas::RegistryPolicy&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::EventSchemas::Schema&quot;)" name=" filteredSpecification(&quot;AWS::EventSchemas::Schema&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Events::ApiDestination&quot;)" name=" filteredSpecification(&quot;AWS::Events::ApiDestination&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Events::Archive&quot;)" name=" filteredSpecification(&quot;AWS::Events::Archive&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Events::Connection&quot;)" name=" filteredSpecification(&quot;AWS::Events::Connection&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Events::EventBus&quot;)" name=" filteredSpecification(&quot;AWS::Events::EventBus&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Events::EventBusPolicy&quot;)" name=" filteredSpecification(&quot;AWS::Events::EventBusPolicy&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Events::Rule&quot;)" name=" filteredSpecification(&quot;AWS::Events::Rule&quot;)" time="0.016">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FIS::ExperimentTemplate&quot;)" name=" filteredSpecification(&quot;AWS::FIS::ExperimentTemplate&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FMS::NotificationChannel&quot;)" name=" filteredSpecification(&quot;AWS::FMS::NotificationChannel&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FMS::Policy&quot;)" name=" filteredSpecification(&quot;AWS::FMS::Policy&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FSx::FileSystem&quot;)" name=" filteredSpecification(&quot;AWS::FSx::FileSystem&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FinSpace::Environment&quot;)" name=" filteredSpecification(&quot;AWS::FinSpace::Environment&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FraudDetector::Detector&quot;)" name=" filteredSpecification(&quot;AWS::FraudDetector::Detector&quot;)" time="0.014">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FraudDetector::EntityType&quot;)" name=" filteredSpecification(&quot;AWS::FraudDetector::EntityType&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FraudDetector::EventType&quot;)" name=" filteredSpecification(&quot;AWS::FraudDetector::EventType&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FraudDetector::Label&quot;)" name=" filteredSpecification(&quot;AWS::FraudDetector::Label&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FraudDetector::Outcome&quot;)" name=" filteredSpecification(&quot;AWS::FraudDetector::Outcome&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::FraudDetector::Variable&quot;)" name=" filteredSpecification(&quot;AWS::FraudDetector::Variable&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GameLift::Alias&quot;)" name=" filteredSpecification(&quot;AWS::GameLift::Alias&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GameLift::Build&quot;)" name=" filteredSpecification(&quot;AWS::GameLift::Build&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GameLift::Fleet&quot;)" name=" filteredSpecification(&quot;AWS::GameLift::Fleet&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GameLift::GameServerGroup&quot;)" name=" filteredSpecification(&quot;AWS::GameLift::GameServerGroup&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GameLift::GameSessionQueue&quot;)" name=" filteredSpecification(&quot;AWS::GameLift::GameSessionQueue&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GameLift::MatchmakingConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::GameLift::MatchmakingConfiguration&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GameLift::MatchmakingRuleSet&quot;)" name=" filteredSpecification(&quot;AWS::GameLift::MatchmakingRuleSet&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GameLift::Script&quot;)" name=" filteredSpecification(&quot;AWS::GameLift::Script&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GlobalAccelerator::Accelerator&quot;)" name=" filteredSpecification(&quot;AWS::GlobalAccelerator::Accelerator&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GlobalAccelerator::EndpointGroup&quot;)" name=" filteredSpecification(&quot;AWS::GlobalAccelerator::EndpointGroup&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GlobalAccelerator::Listener&quot;)" name=" filteredSpecification(&quot;AWS::GlobalAccelerator::Listener&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Classifier&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Classifier&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Connection&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Connection&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Crawler&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Crawler&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::DataCatalogEncryptionSettings&quot;)" name=" filteredSpecification(&quot;AWS::Glue::DataCatalogEncryptionSettings&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Database&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Database&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::DevEndpoint&quot;)" name=" filteredSpecification(&quot;AWS::Glue::DevEndpoint&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Job&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Job&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::MLTransform&quot;)" name=" filteredSpecification(&quot;AWS::Glue::MLTransform&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Partition&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Partition&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Registry&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Registry&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Schema&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Schema&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::SchemaVersion&quot;)" name=" filteredSpecification(&quot;AWS::Glue::SchemaVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::SchemaVersionMetadata&quot;)" name=" filteredSpecification(&quot;AWS::Glue::SchemaVersionMetadata&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::SecurityConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::Glue::SecurityConfiguration&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Table&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Table&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Trigger&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Trigger&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Glue::Workflow&quot;)" name=" filteredSpecification(&quot;AWS::Glue::Workflow&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::ConnectorDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::ConnectorDefinition&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::ConnectorDefinitionVersion&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::ConnectorDefinitionVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::CoreDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::CoreDefinition&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::CoreDefinitionVersion&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::CoreDefinitionVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::DeviceDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::DeviceDefinition&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::DeviceDefinitionVersion&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::DeviceDefinitionVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::FunctionDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::FunctionDefinition&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::FunctionDefinitionVersion&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::FunctionDefinitionVersion&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::Group&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::Group&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::GroupVersion&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::GroupVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::LoggerDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::LoggerDefinition&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::LoggerDefinitionVersion&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::LoggerDefinitionVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::ResourceDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::ResourceDefinition&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::ResourceDefinitionVersion&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::ResourceDefinitionVersion&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::SubscriptionDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::SubscriptionDefinition&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Greengrass::SubscriptionDefinitionVersion&quot;)" name=" filteredSpecification(&quot;AWS::Greengrass::SubscriptionDefinitionVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GreengrassV2::ComponentVersion&quot;)" name=" filteredSpecification(&quot;AWS::GreengrassV2::ComponentVersion&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GroundStation::Config&quot;)" name=" filteredSpecification(&quot;AWS::GroundStation::Config&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GroundStation::DataflowEndpointGroup&quot;)" name=" filteredSpecification(&quot;AWS::GroundStation::DataflowEndpointGroup&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GroundStation::MissionProfile&quot;)" name=" filteredSpecification(&quot;AWS::GroundStation::MissionProfile&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GuardDuty::Detector&quot;)" name=" filteredSpecification(&quot;AWS::GuardDuty::Detector&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GuardDuty::Filter&quot;)" name=" filteredSpecification(&quot;AWS::GuardDuty::Filter&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GuardDuty::IPSet&quot;)" name=" filteredSpecification(&quot;AWS::GuardDuty::IPSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GuardDuty::Master&quot;)" name=" filteredSpecification(&quot;AWS::GuardDuty::Master&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GuardDuty::Member&quot;)" name=" filteredSpecification(&quot;AWS::GuardDuty::Member&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::GuardDuty::ThreatIntelSet&quot;)" name=" filteredSpecification(&quot;AWS::GuardDuty::ThreatIntelSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::HealthLake::FHIRDatastore&quot;)" name=" filteredSpecification(&quot;AWS::HealthLake::FHIRDatastore&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::AccessKey&quot;)" name=" filteredSpecification(&quot;AWS::IAM::AccessKey&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::Group&quot;)" name=" filteredSpecification(&quot;AWS::IAM::Group&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::InstanceProfile&quot;)" name=" filteredSpecification(&quot;AWS::IAM::InstanceProfile&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::ManagedPolicy&quot;)" name=" filteredSpecification(&quot;AWS::IAM::ManagedPolicy&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::OIDCProvider&quot;)" name=" filteredSpecification(&quot;AWS::IAM::OIDCProvider&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::Policy&quot;)" name=" filteredSpecification(&quot;AWS::IAM::Policy&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::Role&quot;)" name=" filteredSpecification(&quot;AWS::IAM::Role&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::SAMLProvider&quot;)" name=" filteredSpecification(&quot;AWS::IAM::SAMLProvider&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::ServerCertificate&quot;)" name=" filteredSpecification(&quot;AWS::IAM::ServerCertificate&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::ServiceLinkedRole&quot;)" name=" filteredSpecification(&quot;AWS::IAM::ServiceLinkedRole&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::User&quot;)" name=" filteredSpecification(&quot;AWS::IAM::User&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::UserToGroupAddition&quot;)" name=" filteredSpecification(&quot;AWS::IAM::UserToGroupAddition&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IAM::VirtualMFADevice&quot;)" name=" filteredSpecification(&quot;AWS::IAM::VirtualMFADevice&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IVS::Channel&quot;)" name=" filteredSpecification(&quot;AWS::IVS::Channel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IVS::PlaybackKeyPair&quot;)" name=" filteredSpecification(&quot;AWS::IVS::PlaybackKeyPair&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IVS::RecordingConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::IVS::RecordingConfiguration&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IVS::StreamKey&quot;)" name=" filteredSpecification(&quot;AWS::IVS::StreamKey&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ImageBuilder::Component&quot;)" name=" filteredSpecification(&quot;AWS::ImageBuilder::Component&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ImageBuilder::ContainerRecipe&quot;)" name=" filteredSpecification(&quot;AWS::ImageBuilder::ContainerRecipe&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ImageBuilder::DistributionConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::ImageBuilder::DistributionConfiguration&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ImageBuilder::Image&quot;)" name=" filteredSpecification(&quot;AWS::ImageBuilder::Image&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ImageBuilder::ImagePipeline&quot;)" name=" filteredSpecification(&quot;AWS::ImageBuilder::ImagePipeline&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ImageBuilder::ImageRecipe&quot;)" name=" filteredSpecification(&quot;AWS::ImageBuilder::ImageRecipe&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ImageBuilder::InfrastructureConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::ImageBuilder::InfrastructureConfiguration&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Inspector::AssessmentTarget&quot;)" name=" filteredSpecification(&quot;AWS::Inspector::AssessmentTarget&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Inspector::AssessmentTemplate&quot;)" name=" filteredSpecification(&quot;AWS::Inspector::AssessmentTemplate&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Inspector::ResourceGroup&quot;)" name=" filteredSpecification(&quot;AWS::Inspector::ResourceGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT1Click::Device&quot;)" name=" filteredSpecification(&quot;AWS::IoT1Click::Device&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT1Click::Placement&quot;)" name=" filteredSpecification(&quot;AWS::IoT1Click::Placement&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT1Click::Project&quot;)" name=" filteredSpecification(&quot;AWS::IoT1Click::Project&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::AccountAuditConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::IoT::AccountAuditConfiguration&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::Authorizer&quot;)" name=" filteredSpecification(&quot;AWS::IoT::Authorizer&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::Certificate&quot;)" name=" filteredSpecification(&quot;AWS::IoT::Certificate&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::CustomMetric&quot;)" name=" filteredSpecification(&quot;AWS::IoT::CustomMetric&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::Dimension&quot;)" name=" filteredSpecification(&quot;AWS::IoT::Dimension&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::DomainConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::IoT::DomainConfiguration&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::FleetMetric&quot;)" name=" filteredSpecification(&quot;AWS::IoT::FleetMetric&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::MitigationAction&quot;)" name=" filteredSpecification(&quot;AWS::IoT::MitigationAction&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::Policy&quot;)" name=" filteredSpecification(&quot;AWS::IoT::Policy&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::PolicyPrincipalAttachment&quot;)" name=" filteredSpecification(&quot;AWS::IoT::PolicyPrincipalAttachment&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::ProvisioningTemplate&quot;)" name=" filteredSpecification(&quot;AWS::IoT::ProvisioningTemplate&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::ScheduledAudit&quot;)" name=" filteredSpecification(&quot;AWS::IoT::ScheduledAudit&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::SecurityProfile&quot;)" name=" filteredSpecification(&quot;AWS::IoT::SecurityProfile&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::Thing&quot;)" name=" filteredSpecification(&quot;AWS::IoT::Thing&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::ThingPrincipalAttachment&quot;)" name=" filteredSpecification(&quot;AWS::IoT::ThingPrincipalAttachment&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::TopicRule&quot;)" name=" filteredSpecification(&quot;AWS::IoT::TopicRule&quot;)" time="0.029">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoT::TopicRuleDestination&quot;)" name=" filteredSpecification(&quot;AWS::IoT::TopicRuleDestination&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTAnalytics::Channel&quot;)" name=" filteredSpecification(&quot;AWS::IoTAnalytics::Channel&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTAnalytics::Dataset&quot;)" name=" filteredSpecification(&quot;AWS::IoTAnalytics::Dataset&quot;)" time="0.013">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTAnalytics::Datastore&quot;)" name=" filteredSpecification(&quot;AWS::IoTAnalytics::Datastore&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTAnalytics::Pipeline&quot;)" name=" filteredSpecification(&quot;AWS::IoTAnalytics::Pipeline&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTCoreDeviceAdvisor::SuiteDefinition&quot;)" name=" filteredSpecification(&quot;AWS::IoTCoreDeviceAdvisor::SuiteDefinition&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTEvents::DetectorModel&quot;)" name=" filteredSpecification(&quot;AWS::IoTEvents::DetectorModel&quot;)" time="0.019">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTEvents::Input&quot;)" name=" filteredSpecification(&quot;AWS::IoTEvents::Input&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTFleetHub::Application&quot;)" name=" filteredSpecification(&quot;AWS::IoTFleetHub::Application&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTSiteWise::AccessPolicy&quot;)" name=" filteredSpecification(&quot;AWS::IoTSiteWise::AccessPolicy&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTSiteWise::Asset&quot;)" name=" filteredSpecification(&quot;AWS::IoTSiteWise::Asset&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTSiteWise::AssetModel&quot;)" name=" filteredSpecification(&quot;AWS::IoTSiteWise::AssetModel&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTSiteWise::Dashboard&quot;)" name=" filteredSpecification(&quot;AWS::IoTSiteWise::Dashboard&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTSiteWise::Gateway&quot;)" name=" filteredSpecification(&quot;AWS::IoTSiteWise::Gateway&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTSiteWise::Portal&quot;)" name=" filteredSpecification(&quot;AWS::IoTSiteWise::Portal&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTSiteWise::Project&quot;)" name=" filteredSpecification(&quot;AWS::IoTSiteWise::Project&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTThingsGraph::FlowTemplate&quot;)" name=" filteredSpecification(&quot;AWS::IoTThingsGraph::FlowTemplate&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTWireless::Destination&quot;)" name=" filteredSpecification(&quot;AWS::IoTWireless::Destination&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTWireless::DeviceProfile&quot;)" name=" filteredSpecification(&quot;AWS::IoTWireless::DeviceProfile&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTWireless::PartnerAccount&quot;)" name=" filteredSpecification(&quot;AWS::IoTWireless::PartnerAccount&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTWireless::ServiceProfile&quot;)" name=" filteredSpecification(&quot;AWS::IoTWireless::ServiceProfile&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTWireless::TaskDefinition&quot;)" name=" filteredSpecification(&quot;AWS::IoTWireless::TaskDefinition&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTWireless::WirelessDevice&quot;)" name=" filteredSpecification(&quot;AWS::IoTWireless::WirelessDevice&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::IoTWireless::WirelessGateway&quot;)" name=" filteredSpecification(&quot;AWS::IoTWireless::WirelessGateway&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KMS::Alias&quot;)" name=" filteredSpecification(&quot;AWS::KMS::Alias&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KMS::Key&quot;)" name=" filteredSpecification(&quot;AWS::KMS::Key&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KMS::ReplicaKey&quot;)" name=" filteredSpecification(&quot;AWS::KMS::ReplicaKey&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Kendra::DataSource&quot;)" name=" filteredSpecification(&quot;AWS::Kendra::DataSource&quot;)" time="0.04">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Kendra::Faq&quot;)" name=" filteredSpecification(&quot;AWS::Kendra::Faq&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Kendra::Index&quot;)" name=" filteredSpecification(&quot;AWS::Kendra::Index&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Kinesis::Stream&quot;)" name=" filteredSpecification(&quot;AWS::Kinesis::Stream&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Kinesis::StreamConsumer&quot;)" name=" filteredSpecification(&quot;AWS::Kinesis::StreamConsumer&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KinesisAnalytics::Application&quot;)" name=" filteredSpecification(&quot;AWS::KinesisAnalytics::Application&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KinesisAnalytics::ApplicationOutput&quot;)" name=" filteredSpecification(&quot;AWS::KinesisAnalytics::ApplicationOutput&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KinesisAnalytics::ApplicationReferenceDataSource&quot;)" name=" filteredSpecification(&quot;AWS::KinesisAnalytics::ApplicationReferenceDataSource&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KinesisAnalyticsV2::Application&quot;)" name=" filteredSpecification(&quot;AWS::KinesisAnalyticsV2::Application&quot;)" time="0.019">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption&quot;)" name=" filteredSpecification(&quot;AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KinesisAnalyticsV2::ApplicationOutput&quot;)" name=" filteredSpecification(&quot;AWS::KinesisAnalyticsV2::ApplicationOutput&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource&quot;)" name=" filteredSpecification(&quot;AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::KinesisFirehose::DeliveryStream&quot;)" name=" filteredSpecification(&quot;AWS::KinesisFirehose::DeliveryStream&quot;)" time="0.036">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LakeFormation::DataLakeSettings&quot;)" name=" filteredSpecification(&quot;AWS::LakeFormation::DataLakeSettings&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LakeFormation::Permissions&quot;)" name=" filteredSpecification(&quot;AWS::LakeFormation::Permissions&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LakeFormation::Resource&quot;)" name=" filteredSpecification(&quot;AWS::LakeFormation::Resource&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::Alias&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::Alias&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::CodeSigningConfig&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::CodeSigningConfig&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::EventInvokeConfig&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::EventInvokeConfig&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::EventSourceMapping&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::EventSourceMapping&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::Function&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::Function&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::LayerVersion&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::LayerVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::LayerVersionPermission&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::LayerVersionPermission&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::Permission&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::Permission&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lambda::Version&quot;)" name=" filteredSpecification(&quot;AWS::Lambda::Version&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LicenseManager::Grant&quot;)" name=" filteredSpecification(&quot;AWS::LicenseManager::Grant&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LicenseManager::License&quot;)" name=" filteredSpecification(&quot;AWS::LicenseManager::License&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lightsail::Disk&quot;)" name=" filteredSpecification(&quot;AWS::Lightsail::Disk&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Lightsail::Instance&quot;)" name=" filteredSpecification(&quot;AWS::Lightsail::Instance&quot;)" time="0.013">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Location::GeofenceCollection&quot;)" name=" filteredSpecification(&quot;AWS::Location::GeofenceCollection&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Location::Map&quot;)" name=" filteredSpecification(&quot;AWS::Location::Map&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Location::PlaceIndex&quot;)" name=" filteredSpecification(&quot;AWS::Location::PlaceIndex&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Location::RouteCalculator&quot;)" name=" filteredSpecification(&quot;AWS::Location::RouteCalculator&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Location::Tracker&quot;)" name=" filteredSpecification(&quot;AWS::Location::Tracker&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Location::TrackerConsumer&quot;)" name=" filteredSpecification(&quot;AWS::Location::TrackerConsumer&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Logs::Destination&quot;)" name=" filteredSpecification(&quot;AWS::Logs::Destination&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Logs::LogGroup&quot;)" name=" filteredSpecification(&quot;AWS::Logs::LogGroup&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Logs::LogStream&quot;)" name=" filteredSpecification(&quot;AWS::Logs::LogStream&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Logs::MetricFilter&quot;)" name=" filteredSpecification(&quot;AWS::Logs::MetricFilter&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Logs::QueryDefinition&quot;)" name=" filteredSpecification(&quot;AWS::Logs::QueryDefinition&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Logs::ResourcePolicy&quot;)" name=" filteredSpecification(&quot;AWS::Logs::ResourcePolicy&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Logs::SubscriptionFilter&quot;)" name=" filteredSpecification(&quot;AWS::Logs::SubscriptionFilter&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LookoutEquipment::InferenceScheduler&quot;)" name=" filteredSpecification(&quot;AWS::LookoutEquipment::InferenceScheduler&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LookoutMetrics::Alert&quot;)" name=" filteredSpecification(&quot;AWS::LookoutMetrics::Alert&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LookoutMetrics::AnomalyDetector&quot;)" name=" filteredSpecification(&quot;AWS::LookoutMetrics::AnomalyDetector&quot;)" time="0.013">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::LookoutVision::Project&quot;)" name=" filteredSpecification(&quot;AWS::LookoutVision::Project&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MSK::Cluster&quot;)" name=" filteredSpecification(&quot;AWS::MSK::Cluster&quot;)" time="0.014">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MWAA::Environment&quot;)" name=" filteredSpecification(&quot;AWS::MWAA::Environment&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Macie::CustomDataIdentifier&quot;)" name=" filteredSpecification(&quot;AWS::Macie::CustomDataIdentifier&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Macie::FindingsFilter&quot;)" name=" filteredSpecification(&quot;AWS::Macie::FindingsFilter&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Macie::Session&quot;)" name=" filteredSpecification(&quot;AWS::Macie::Session&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ManagedBlockchain::Member&quot;)" name=" filteredSpecification(&quot;AWS::ManagedBlockchain::Member&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ManagedBlockchain::Node&quot;)" name=" filteredSpecification(&quot;AWS::ManagedBlockchain::Node&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaConnect::Flow&quot;)" name=" filteredSpecification(&quot;AWS::MediaConnect::Flow&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaConnect::FlowEntitlement&quot;)" name=" filteredSpecification(&quot;AWS::MediaConnect::FlowEntitlement&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaConnect::FlowOutput&quot;)" name=" filteredSpecification(&quot;AWS::MediaConnect::FlowOutput&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaConnect::FlowSource&quot;)" name=" filteredSpecification(&quot;AWS::MediaConnect::FlowSource&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaConnect::FlowVpcInterface&quot;)" name=" filteredSpecification(&quot;AWS::MediaConnect::FlowVpcInterface&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaConvert::JobTemplate&quot;)" name=" filteredSpecification(&quot;AWS::MediaConvert::JobTemplate&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaConvert::Preset&quot;)" name=" filteredSpecification(&quot;AWS::MediaConvert::Preset&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaConvert::Queue&quot;)" name=" filteredSpecification(&quot;AWS::MediaConvert::Queue&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaLive::Channel&quot;)" name=" filteredSpecification(&quot;AWS::MediaLive::Channel&quot;)" time="0.136">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaLive::Input&quot;)" name=" filteredSpecification(&quot;AWS::MediaLive::Input&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaLive::InputSecurityGroup&quot;)" name=" filteredSpecification(&quot;AWS::MediaLive::InputSecurityGroup&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaPackage::Asset&quot;)" name=" filteredSpecification(&quot;AWS::MediaPackage::Asset&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaPackage::Channel&quot;)" name=" filteredSpecification(&quot;AWS::MediaPackage::Channel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaPackage::OriginEndpoint&quot;)" name=" filteredSpecification(&quot;AWS::MediaPackage::OriginEndpoint&quot;)" time="0.019">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaPackage::PackagingConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::MediaPackage::PackagingConfiguration&quot;)" time="0.012">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaPackage::PackagingGroup&quot;)" name=" filteredSpecification(&quot;AWS::MediaPackage::PackagingGroup&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MediaStore::Container&quot;)" name=" filteredSpecification(&quot;AWS::MediaStore::Container&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MemoryDB::ACL&quot;)" name=" filteredSpecification(&quot;AWS::MemoryDB::ACL&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MemoryDB::Cluster&quot;)" name=" filteredSpecification(&quot;AWS::MemoryDB::Cluster&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MemoryDB::ParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::MemoryDB::ParameterGroup&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MemoryDB::SubnetGroup&quot;)" name=" filteredSpecification(&quot;AWS::MemoryDB::SubnetGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::MemoryDB::User&quot;)" name=" filteredSpecification(&quot;AWS::MemoryDB::User&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Neptune::DBCluster&quot;)" name=" filteredSpecification(&quot;AWS::Neptune::DBCluster&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Neptune::DBClusterParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::Neptune::DBClusterParameterGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Neptune::DBInstance&quot;)" name=" filteredSpecification(&quot;AWS::Neptune::DBInstance&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Neptune::DBParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::Neptune::DBParameterGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Neptune::DBSubnetGroup&quot;)" name=" filteredSpecification(&quot;AWS::Neptune::DBSubnetGroup&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkFirewall::Firewall&quot;)" name=" filteredSpecification(&quot;AWS::NetworkFirewall::Firewall&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkFirewall::FirewallPolicy&quot;)" name=" filteredSpecification(&quot;AWS::NetworkFirewall::FirewallPolicy&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkFirewall::LoggingConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::NetworkFirewall::LoggingConfiguration&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkFirewall::RuleGroup&quot;)" name=" filteredSpecification(&quot;AWS::NetworkFirewall::RuleGroup&quot;)" time="0.014">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkManager::CustomerGatewayAssociation&quot;)" name=" filteredSpecification(&quot;AWS::NetworkManager::CustomerGatewayAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkManager::Device&quot;)" name=" filteredSpecification(&quot;AWS::NetworkManager::Device&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkManager::GlobalNetwork&quot;)" name=" filteredSpecification(&quot;AWS::NetworkManager::GlobalNetwork&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkManager::Link&quot;)" name=" filteredSpecification(&quot;AWS::NetworkManager::Link&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkManager::LinkAssociation&quot;)" name=" filteredSpecification(&quot;AWS::NetworkManager::LinkAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkManager::Site&quot;)" name=" filteredSpecification(&quot;AWS::NetworkManager::Site&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NetworkManager::TransitGatewayRegistration&quot;)" name=" filteredSpecification(&quot;AWS::NetworkManager::TransitGatewayRegistration&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NimbleStudio::LaunchProfile&quot;)" name=" filteredSpecification(&quot;AWS::NimbleStudio::LaunchProfile&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NimbleStudio::StreamingImage&quot;)" name=" filteredSpecification(&quot;AWS::NimbleStudio::StreamingImage&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NimbleStudio::Studio&quot;)" name=" filteredSpecification(&quot;AWS::NimbleStudio::Studio&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::NimbleStudio::StudioComponent&quot;)" name=" filteredSpecification(&quot;AWS::NimbleStudio::StudioComponent&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpenSearchService::Domain&quot;)" name=" filteredSpecification(&quot;AWS::OpenSearchService::Domain&quot;)" time="0.013">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpsWorks::App&quot;)" name=" filteredSpecification(&quot;AWS::OpsWorks::App&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpsWorks::ElasticLoadBalancerAttachment&quot;)" name=" filteredSpecification(&quot;AWS::OpsWorks::ElasticLoadBalancerAttachment&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpsWorks::Instance&quot;)" name=" filteredSpecification(&quot;AWS::OpsWorks::Instance&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpsWorks::Layer&quot;)" name=" filteredSpecification(&quot;AWS::OpsWorks::Layer&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpsWorks::Stack&quot;)" name=" filteredSpecification(&quot;AWS::OpsWorks::Stack&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpsWorks::UserProfile&quot;)" name=" filteredSpecification(&quot;AWS::OpsWorks::UserProfile&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpsWorks::Volume&quot;)" name=" filteredSpecification(&quot;AWS::OpsWorks::Volume&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::OpsWorksCM::Server&quot;)" name=" filteredSpecification(&quot;AWS::OpsWorksCM::Server&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::ADMChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::ADMChannel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::APNSChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::APNSChannel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::APNSSandboxChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::APNSSandboxChannel&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::APNSVoipChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::APNSVoipChannel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::APNSVoipSandboxChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::APNSVoipSandboxChannel&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::App&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::App&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::ApplicationSettings&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::ApplicationSettings&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::BaiduChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::BaiduChannel&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::Campaign&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::Campaign&quot;)" time="0.016">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::EmailChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::EmailChannel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::EmailTemplate&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::EmailTemplate&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::EventStream&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::EventStream&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::GCMChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::GCMChannel&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::PushTemplate&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::PushTemplate&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::SMSChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::SMSChannel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::Segment&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::Segment&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::SmsTemplate&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::SmsTemplate&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Pinpoint::VoiceChannel&quot;)" name=" filteredSpecification(&quot;AWS::Pinpoint::VoiceChannel&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::PinpointEmail::ConfigurationSet&quot;)" name=" filteredSpecification(&quot;AWS::PinpointEmail::ConfigurationSet&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::PinpointEmail::ConfigurationSetEventDestination&quot;)" name=" filteredSpecification(&quot;AWS::PinpointEmail::ConfigurationSetEventDestination&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::PinpointEmail::DedicatedIpPool&quot;)" name=" filteredSpecification(&quot;AWS::PinpointEmail::DedicatedIpPool&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::PinpointEmail::Identity&quot;)" name=" filteredSpecification(&quot;AWS::PinpointEmail::Identity&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::QLDB::Ledger&quot;)" name=" filteredSpecification(&quot;AWS::QLDB::Ledger&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::QLDB::Stream&quot;)" name=" filteredSpecification(&quot;AWS::QLDB::Stream&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::QuickSight::Analysis&quot;)" name=" filteredSpecification(&quot;AWS::QuickSight::Analysis&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::QuickSight::Dashboard&quot;)" name=" filteredSpecification(&quot;AWS::QuickSight::Dashboard&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::QuickSight::DataSet&quot;)" name=" filteredSpecification(&quot;AWS::QuickSight::DataSet&quot;)" time="0.02">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::QuickSight::DataSource&quot;)" name=" filteredSpecification(&quot;AWS::QuickSight::DataSource&quot;)" time="0.019">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::QuickSight::Template&quot;)" name=" filteredSpecification(&quot;AWS::QuickSight::Template&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::QuickSight::Theme&quot;)" name=" filteredSpecification(&quot;AWS::QuickSight::Theme&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RAM::ResourceShare&quot;)" name=" filteredSpecification(&quot;AWS::RAM::ResourceShare&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBCluster&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBCluster&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBClusterParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBClusterParameterGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBInstance&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBInstance&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBParameterGroup&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBProxy&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBProxy&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBProxyEndpoint&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBProxyEndpoint&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBProxyTargetGroup&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBProxyTargetGroup&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBSecurityGroup&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBSecurityGroup&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBSecurityGroupIngress&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBSecurityGroupIngress&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::DBSubnetGroup&quot;)" name=" filteredSpecification(&quot;AWS::RDS::DBSubnetGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::EventSubscription&quot;)" name=" filteredSpecification(&quot;AWS::RDS::EventSubscription&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::GlobalCluster&quot;)" name=" filteredSpecification(&quot;AWS::RDS::GlobalCluster&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RDS::OptionGroup&quot;)" name=" filteredSpecification(&quot;AWS::RDS::OptionGroup&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Redshift::Cluster&quot;)" name=" filteredSpecification(&quot;AWS::Redshift::Cluster&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Redshift::ClusterParameterGroup&quot;)" name=" filteredSpecification(&quot;AWS::Redshift::ClusterParameterGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Redshift::ClusterSecurityGroup&quot;)" name=" filteredSpecification(&quot;AWS::Redshift::ClusterSecurityGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Redshift::ClusterSecurityGroupIngress&quot;)" name=" filteredSpecification(&quot;AWS::Redshift::ClusterSecurityGroupIngress&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Redshift::ClusterSubnetGroup&quot;)" name=" filteredSpecification(&quot;AWS::Redshift::ClusterSubnetGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ResourceGroups::Group&quot;)" name=" filteredSpecification(&quot;AWS::ResourceGroups::Group&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RoboMaker::Fleet&quot;)" name=" filteredSpecification(&quot;AWS::RoboMaker::Fleet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RoboMaker::Robot&quot;)" name=" filteredSpecification(&quot;AWS::RoboMaker::Robot&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RoboMaker::RobotApplication&quot;)" name=" filteredSpecification(&quot;AWS::RoboMaker::RobotApplication&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RoboMaker::RobotApplicationVersion&quot;)" name=" filteredSpecification(&quot;AWS::RoboMaker::RobotApplicationVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RoboMaker::SimulationApplication&quot;)" name=" filteredSpecification(&quot;AWS::RoboMaker::SimulationApplication&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::RoboMaker::SimulationApplicationVersion&quot;)" name=" filteredSpecification(&quot;AWS::RoboMaker::SimulationApplicationVersion&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53::DNSSEC&quot;)" name=" filteredSpecification(&quot;AWS::Route53::DNSSEC&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53::HealthCheck&quot;)" name=" filteredSpecification(&quot;AWS::Route53::HealthCheck&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53::HostedZone&quot;)" name=" filteredSpecification(&quot;AWS::Route53::HostedZone&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53::KeySigningKey&quot;)" name=" filteredSpecification(&quot;AWS::Route53::KeySigningKey&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53::RecordSet&quot;)" name=" filteredSpecification(&quot;AWS::Route53::RecordSet&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53::RecordSetGroup&quot;)" name=" filteredSpecification(&quot;AWS::Route53::RecordSetGroup&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53RecoveryControl::Cluster&quot;)" name=" filteredSpecification(&quot;AWS::Route53RecoveryControl::Cluster&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53RecoveryControl::ControlPanel&quot;)" name=" filteredSpecification(&quot;AWS::Route53RecoveryControl::ControlPanel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53RecoveryControl::RoutingControl&quot;)" name=" filteredSpecification(&quot;AWS::Route53RecoveryControl::RoutingControl&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53RecoveryControl::SafetyRule&quot;)" name=" filteredSpecification(&quot;AWS::Route53RecoveryControl::SafetyRule&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53RecoveryReadiness::Cell&quot;)" name=" filteredSpecification(&quot;AWS::Route53RecoveryReadiness::Cell&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53RecoveryReadiness::ReadinessCheck&quot;)" name=" filteredSpecification(&quot;AWS::Route53RecoveryReadiness::ReadinessCheck&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53RecoveryReadiness::RecoveryGroup&quot;)" name=" filteredSpecification(&quot;AWS::Route53RecoveryReadiness::RecoveryGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53RecoveryReadiness::ResourceSet&quot;)" name=" filteredSpecification(&quot;AWS::Route53RecoveryReadiness::ResourceSet&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::FirewallDomainList&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::FirewallDomainList&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::FirewallRuleGroup&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::FirewallRuleGroup&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::FirewallRuleGroupAssociation&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::FirewallRuleGroupAssociation&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverDNSSECConfig&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverDNSSECConfig&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverEndpoint&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverEndpoint&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverQueryLoggingConfig&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverQueryLoggingConfig&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverRule&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverRule&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverRuleAssociation&quot;)" name=" filteredSpecification(&quot;AWS::Route53Resolver::ResolverRuleAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3::AccessPoint&quot;)" name=" filteredSpecification(&quot;AWS::S3::AccessPoint&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3::Bucket&quot;)" name=" filteredSpecification(&quot;AWS::S3::Bucket&quot;)" time="0.037">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3::BucketPolicy&quot;)" name=" filteredSpecification(&quot;AWS::S3::BucketPolicy&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3::MultiRegionAccessPoint&quot;)" name=" filteredSpecification(&quot;AWS::S3::MultiRegionAccessPoint&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3::MultiRegionAccessPointPolicy&quot;)" name=" filteredSpecification(&quot;AWS::S3::MultiRegionAccessPointPolicy&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3::StorageLens&quot;)" name=" filteredSpecification(&quot;AWS::S3::StorageLens&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3ObjectLambda::AccessPoint&quot;)" name=" filteredSpecification(&quot;AWS::S3ObjectLambda::AccessPoint&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3ObjectLambda::AccessPointPolicy&quot;)" name=" filteredSpecification(&quot;AWS::S3ObjectLambda::AccessPointPolicy&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3Outposts::AccessPoint&quot;)" name=" filteredSpecification(&quot;AWS::S3Outposts::AccessPoint&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3Outposts::Bucket&quot;)" name=" filteredSpecification(&quot;AWS::S3Outposts::Bucket&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3Outposts::BucketPolicy&quot;)" name=" filteredSpecification(&quot;AWS::S3Outposts::BucketPolicy&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::S3Outposts::Endpoint&quot;)" name=" filteredSpecification(&quot;AWS::S3Outposts::Endpoint&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SDB::Domain&quot;)" name=" filteredSpecification(&quot;AWS::SDB::Domain&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SES::ConfigurationSet&quot;)" name=" filteredSpecification(&quot;AWS::SES::ConfigurationSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SES::ConfigurationSetEventDestination&quot;)" name=" filteredSpecification(&quot;AWS::SES::ConfigurationSetEventDestination&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SES::ContactList&quot;)" name=" filteredSpecification(&quot;AWS::SES::ContactList&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SES::ReceiptFilter&quot;)" name=" filteredSpecification(&quot;AWS::SES::ReceiptFilter&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SES::ReceiptRule&quot;)" name=" filteredSpecification(&quot;AWS::SES::ReceiptRule&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SES::ReceiptRuleSet&quot;)" name=" filteredSpecification(&quot;AWS::SES::ReceiptRuleSet&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SES::Template&quot;)" name=" filteredSpecification(&quot;AWS::SES::Template&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SNS::Subscription&quot;)" name=" filteredSpecification(&quot;AWS::SNS::Subscription&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SNS::Topic&quot;)" name=" filteredSpecification(&quot;AWS::SNS::Topic&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SNS::TopicPolicy&quot;)" name=" filteredSpecification(&quot;AWS::SNS::TopicPolicy&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SQS::Queue&quot;)" name=" filteredSpecification(&quot;AWS::SQS::Queue&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SQS::QueuePolicy&quot;)" name=" filteredSpecification(&quot;AWS::SQS::QueuePolicy&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSM::Association&quot;)" name=" filteredSpecification(&quot;AWS::SSM::Association&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSM::Document&quot;)" name=" filteredSpecification(&quot;AWS::SSM::Document&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSM::MaintenanceWindow&quot;)" name=" filteredSpecification(&quot;AWS::SSM::MaintenanceWindow&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSM::MaintenanceWindowTarget&quot;)" name=" filteredSpecification(&quot;AWS::SSM::MaintenanceWindowTarget&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSM::MaintenanceWindowTask&quot;)" name=" filteredSpecification(&quot;AWS::SSM::MaintenanceWindowTask&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSM::Parameter&quot;)" name=" filteredSpecification(&quot;AWS::SSM::Parameter&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSM::PatchBaseline&quot;)" name=" filteredSpecification(&quot;AWS::SSM::PatchBaseline&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSM::ResourceDataSync&quot;)" name=" filteredSpecification(&quot;AWS::SSM::ResourceDataSync&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSMContacts::Contact&quot;)" name=" filteredSpecification(&quot;AWS::SSMContacts::Contact&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSMContacts::ContactChannel&quot;)" name=" filteredSpecification(&quot;AWS::SSMContacts::ContactChannel&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSMIncidents::ReplicationSet&quot;)" name=" filteredSpecification(&quot;AWS::SSMIncidents::ReplicationSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSMIncidents::ResponsePlan&quot;)" name=" filteredSpecification(&quot;AWS::SSMIncidents::ResponsePlan&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSO::Assignment&quot;)" name=" filteredSpecification(&quot;AWS::SSO::Assignment&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSO::InstanceAccessControlAttributeConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::SSO::InstanceAccessControlAttributeConfiguration&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SSO::PermissionSet&quot;)" name=" filteredSpecification(&quot;AWS::SSO::PermissionSet&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::App&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::App&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::AppImageConfig&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::AppImageConfig&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::CodeRepository&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::CodeRepository&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::DataQualityJobDefinition&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::DataQualityJobDefinition&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::Device&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::Device&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::DeviceFleet&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::DeviceFleet&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::Domain&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::Domain&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::Endpoint&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::Endpoint&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::EndpointConfig&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::EndpointConfig&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::FeatureGroup&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::FeatureGroup&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::Image&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::Image&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::ImageVersion&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::ImageVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::Model&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::Model&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::ModelBiasJobDefinition&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::ModelBiasJobDefinition&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::ModelExplainabilityJobDefinition&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::ModelExplainabilityJobDefinition&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::ModelPackageGroup&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::ModelPackageGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::ModelQualityJobDefinition&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::ModelQualityJobDefinition&quot;)" time="0.011">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::MonitoringSchedule&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::MonitoringSchedule&quot;)" time="0.014">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::NotebookInstance&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::NotebookInstance&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::NotebookInstanceLifecycleConfig&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::NotebookInstanceLifecycleConfig&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::Pipeline&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::Pipeline&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::Project&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::Project&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::UserProfile&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::UserProfile&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SageMaker::Workteam&quot;)" name=" filteredSpecification(&quot;AWS::SageMaker::Workteam&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SecretsManager::ResourcePolicy&quot;)" name=" filteredSpecification(&quot;AWS::SecretsManager::ResourcePolicy&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SecretsManager::RotationSchedule&quot;)" name=" filteredSpecification(&quot;AWS::SecretsManager::RotationSchedule&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SecretsManager::Secret&quot;)" name=" filteredSpecification(&quot;AWS::SecretsManager::Secret&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SecretsManager::SecretTargetAttachment&quot;)" name=" filteredSpecification(&quot;AWS::SecretsManager::SecretTargetAttachment&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::SecurityHub::Hub&quot;)" name=" filteredSpecification(&quot;AWS::SecurityHub::Hub&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Serverless::Api&quot;)" name=" filteredSpecification(&quot;AWS::Serverless::Api&quot;)" time="0.009">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Serverless::Application&quot;)" name=" filteredSpecification(&quot;AWS::Serverless::Application&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Serverless::Function&quot;)" name=" filteredSpecification(&quot;AWS::Serverless::Function&quot;)" time="0.034">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Serverless::HttpApi&quot;)" name=" filteredSpecification(&quot;AWS::Serverless::HttpApi&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Serverless::LayerVersion&quot;)" name=" filteredSpecification(&quot;AWS::Serverless::LayerVersion&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Serverless::SimpleTable&quot;)" name=" filteredSpecification(&quot;AWS::Serverless::SimpleTable&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Serverless::StateMachine&quot;)" name=" filteredSpecification(&quot;AWS::Serverless::StateMachine&quot;)" time="0.01">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::AcceptedPortfolioShare&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::AcceptedPortfolioShare&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::CloudFormationProduct&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::CloudFormationProduct&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::CloudFormationProvisionedProduct&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::CloudFormationProvisionedProduct&quot;)" time="0.006">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::LaunchNotificationConstraint&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::LaunchNotificationConstraint&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::LaunchRoleConstraint&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::LaunchRoleConstraint&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::LaunchTemplateConstraint&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::LaunchTemplateConstraint&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::Portfolio&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::Portfolio&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::PortfolioPrincipalAssociation&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::PortfolioPrincipalAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::PortfolioProductAssociation&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::PortfolioProductAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::PortfolioShare&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::PortfolioShare&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::ResourceUpdateConstraint&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::ResourceUpdateConstraint&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::ServiceAction&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::ServiceAction&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::ServiceActionAssociation&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::ServiceActionAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::StackSetConstraint&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::StackSetConstraint&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::TagOption&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::TagOption&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalog::TagOptionAssociation&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalog::TagOptionAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalogAppRegistry::Application&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalogAppRegistry::Application&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalogAppRegistry::AttributeGroup&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalogAppRegistry::AttributeGroup&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceCatalogAppRegistry::ResourceAssociation&quot;)" name=" filteredSpecification(&quot;AWS::ServiceCatalogAppRegistry::ResourceAssociation&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceDiscovery::HttpNamespace&quot;)" name=" filteredSpecification(&quot;AWS::ServiceDiscovery::HttpNamespace&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceDiscovery::Instance&quot;)" name=" filteredSpecification(&quot;AWS::ServiceDiscovery::Instance&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceDiscovery::PrivateDnsNamespace&quot;)" name=" filteredSpecification(&quot;AWS::ServiceDiscovery::PrivateDnsNamespace&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceDiscovery::PublicDnsNamespace&quot;)" name=" filteredSpecification(&quot;AWS::ServiceDiscovery::PublicDnsNamespace&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::ServiceDiscovery::Service&quot;)" name=" filteredSpecification(&quot;AWS::ServiceDiscovery::Service&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Signer::ProfilePermission&quot;)" name=" filteredSpecification(&quot;AWS::Signer::ProfilePermission&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Signer::SigningProfile&quot;)" name=" filteredSpecification(&quot;AWS::Signer::SigningProfile&quot;)" time="0.004">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::StepFunctions::Activity&quot;)" name=" filteredSpecification(&quot;AWS::StepFunctions::Activity&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::StepFunctions::StateMachine&quot;)" name=" filteredSpecification(&quot;AWS::StepFunctions::StateMachine&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Synthetics::Canary&quot;)" name=" filteredSpecification(&quot;AWS::Synthetics::Canary&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Timestream::Database&quot;)" name=" filteredSpecification(&quot;AWS::Timestream::Database&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Timestream::Table&quot;)" name=" filteredSpecification(&quot;AWS::Timestream::Table&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Transfer::Server&quot;)" name=" filteredSpecification(&quot;AWS::Transfer::Server&quot;)" time="0.007">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::Transfer::User&quot;)" name=" filteredSpecification(&quot;AWS::Transfer::User&quot;)" time="0.005">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAF::ByteMatchSet&quot;)" name=" filteredSpecification(&quot;AWS::WAF::ByteMatchSet&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAF::IPSet&quot;)" name=" filteredSpecification(&quot;AWS::WAF::IPSet&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAF::Rule&quot;)" name=" filteredSpecification(&quot;AWS::WAF::Rule&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAF::SizeConstraintSet&quot;)" name=" filteredSpecification(&quot;AWS::WAF::SizeConstraintSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAF::SqlInjectionMatchSet&quot;)" name=" filteredSpecification(&quot;AWS::WAF::SqlInjectionMatchSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAF::WebACL&quot;)" name=" filteredSpecification(&quot;AWS::WAF::WebACL&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAF::XssMatchSet&quot;)" name=" filteredSpecification(&quot;AWS::WAF::XssMatchSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::ByteMatchSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::ByteMatchSet&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::GeoMatchSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::GeoMatchSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::IPSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::IPSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::RateBasedRule&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::RateBasedRule&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::RegexPatternSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::RegexPatternSet&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::Rule&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::Rule&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::SizeConstraintSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::SizeConstraintSet&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::SqlInjectionMatchSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::SqlInjectionMatchSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::WebACL&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::WebACL&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::WebACLAssociation&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::WebACLAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFRegional::XssMatchSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFRegional::XssMatchSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFv2::IPSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFv2::IPSet&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFv2::LoggingConfiguration&quot;)" name=" filteredSpecification(&quot;AWS::WAFv2::LoggingConfiguration&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFv2::RegexPatternSet&quot;)" name=" filteredSpecification(&quot;AWS::WAFv2::RegexPatternSet&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFv2::RuleGroup&quot;)" name=" filteredSpecification(&quot;AWS::WAFv2::RuleGroup&quot;)" time="0.02">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFv2::WebACL&quot;)" name=" filteredSpecification(&quot;AWS::WAFv2::WebACL&quot;)" time="0.026">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WAFv2::WebACLAssociation&quot;)" name=" filteredSpecification(&quot;AWS::WAFv2::WebACLAssociation&quot;)" time="0.001">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WorkSpaces::ConnectionAlias&quot;)" name=" filteredSpecification(&quot;AWS::WorkSpaces::ConnectionAlias&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::WorkSpaces::Workspace&quot;)" name=" filteredSpecification(&quot;AWS::WorkSpaces::Workspace&quot;)" time="0.003">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::XRay::Group&quot;)" name=" filteredSpecification(&quot;AWS::XRay::Group&quot;)" time="0.002">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;AWS::XRay::SamplingRule&quot;)" name=" filteredSpecification(&quot;AWS::XRay::SamplingRule&quot;)" time="0.008">
    </testcase>
    <testcase classname=" filteredSpecification(&quot;Alexa::ASK::Skill&quot;)" name=" filteredSpecification(&quot;Alexa::ASK::Skill&quot;)" time="0.004">
    </testcase>
  </testsuite>
</testsuites>